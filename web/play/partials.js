!function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/_modal.tpl.html", '<div class="modal" tabindex="-1" role="dialog" data-animation="am-fade">\n    <div class="modal-dialog base">\n        <div class="modal-content">\n            <div class="modal-header" ng-show="title">\n                <button ng-if="canClose" type="button" class="close" ng-click="$hide()">&times;</button>\n                <h4 class="modal-title" ng-bind="title"></h4>\n            </div>\n            <div ng-bind="content"></div>\n        </div>\n    </div>\n</div>\n')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/errorReporter.tpl.html", "<div>{{'Error'|t}}</div>")
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/help.chapter.tpl.html", '<div class="col-md-10 col-md-offset-2">\n\t<h2 class="firstheader">{{chapter.title}}</h2>\n\t<div ng-bind-html="chapter.p" class="help"></div>\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/help.tpl.html", '<div class="container-fluid" ng-drag-start="setDrag(true)" ng-drag-stop="setDrag(false)">\n    <div class="row">\n        <div class="col-md-2 sidebar" ng-class="{visible: leftMenu}">\n            <div>\n                <ul class="nav nav-pills nav-stacked">\n                    <li ui-sref-active="active" ng-repeat="chapter in help.chapters"><a href ui-sref="app.help.{{chapter.state}}" ng-click="open(\'app.help.\' + chapter.state)">{{chapter.nav || chapter.title}}</a></li>\n                </ul>\n            </div>\n        </div>\n        <div class="gutter" ui-view="main"></div>\n    </div>\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/login.tpl.html", '<form ng-submit="tryLogin(loginInfo, botInfo.defaultBotId)">\n\t<div class="modal-body">\n\t\t<div class="alert alert-danger" ng-if="error">{{error}}</div>\n\t\t<div class="form-group">\n\t\t\t<label for="username">{{\'Username / eMail\'|t}}</label>\n\t\t\t<input type="text" class="form-control" id="username" placeholder="theSinusBot" ng-model="loginInfo.username" autofocus/>\n\t\t</div>\n\t\t<div class="form-group">\n\t\t\t<label for="password">{{\'Password\'|t}}</label>\n\t\t\t<input type="password" class="form-control" id="password" placeholder="Password" ng-model="loginInfo.password"/>\n\t\t</div>\n\t\t<div class="form-group" ng-if="botInfoLoaded && !botInfo.defaultBotId">\n\t\t\t<label for="botId">{{\'Bot-Id\'|t}}</label>\n\t\t\t<input type="text" class="form-control" id="botId" placeholder="MyBot" ng-model="loginInfo.botId"/>\n\t\t</div>\n\t</div>\n\t<div class="modal-footer">\n\t    <button type="submit" class="btn btn-primary">{{\'Login\'|t}}</button>\n\t</div>\n</form>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/play.addFolder.tpl.html", '<form ng-submit="addFolder(newtitle)">\n\t<div class="modal-body">\n\t\t<div class="form-group">\n\t\t\t<label for="title">{{\'Name\'|t}}</label>\n\t\t\t<input type="text" class="form-control" placeholder="{{\'My Folder\'|t}}" ng-model="newtitle" autofocus/>\n\t\t</div>\n\t</div>\n\t<div class="modal-footer">\n\t    <button type="button" class="btn btn-default" ng-click="$hide()">{{\'Close\'|t}}</button>\n\t    <button type="submit" class="btn btn-primary">{{\'Add\'|t}}</button>\n\t</div>\n</form>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/play.addUrl.tpl.html", '<form ng-submit="addUrl(newurl, newtitle)">\n\t<div class="modal-body">\n\t\t<div class="alert alert-info">{{\'You can only add valid stream URLs in here. YouTube links or links to other services will not work.\'|t}}</div>\n\t\t<div class="form-group">\n\t\t\t<label for="url">{{\'URL\'|t}}</label>\n\t\t\t<input type="text" class="form-control" placeholder="{{\'URL\'|t}}" ng-model="newurl" autofocus/>\n\t\t</div>\n\t\t<div class="form-group">\n\t\t\t<label for="title">{{\'Title\'|t}}</label>\n\t\t\t<input type="text" class="form-control" placeholder="{{\'Title\'|t}}" ng-model="newtitle"/>\n\t\t</div>\n\t</div>\n\t<div class="modal-footer">\n\t    <button type="button" class="btn btn-default" ng-click="$hide()">{{\'Close\'|t}}</button>\n\t    <button type="submit" class="btn btn-primary">{{\'Add\'|t}}</button>\n\t</div>\n</form>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/play.artist.tpl.html", '<div class="col-md-10 col-md-offset-2 gutter" ng-file-drop="onFileSelect($files, playlistId, parentFolder, 1)" style="min-height: 500px;">\n\t<h3 class="firstheader">Artist</h3>\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/play.files.tpl.html", '<div class="col-md-10">\n    <div class="alert alert-info" ng-if="!state.tracks.length">You have not uploaded any tracks, yet.</div>\n    <table class="table table-hover table-striped tracklist">\n        <tbody>\n            <tr ng-repeat="track in state.tracks | filter:$parent.filterBySearch track by track.uuid" style="cursor: pointer" ng-class="{\'info\': track.uuid == status.currentTrack.uuid}" ng-dblclick="play(track.uuid)">\n                <td style="padding: 0px; vertical-align: middle; width: 30px;">\n                    <img style="width: 30px; height: 30px;" ng-if="track.thumbnail" ng-src="/cache/{{track.thumbnail}}.jpg" ng-drag="true" ng-drag-data="track"></img>\n                    <div style="width: 30px; height: 30px; background-color: #ddd;" ng-if="!track.thumbnail" ng-drag="true" ng-drag-data="track"></div>\n                </td>\n                <td style="width: 32px; text-align: right"><span class="playindex">{{$index + 1}}</span><span class="glyphicon glyphicon-play playbtn" ng-click="play(track.uuid)"></span></td>\n                <td>{{track.title || track.filename}}</td>\n                <td style="width: 32px"><i class="glyphicon glyphicon-th-large playbtn" bs-dropdown="dropdown"></i></td>\n                <td style="width: 50px">{{track.duration | amDurationFormatTime:\'seconds\':true}}</td>\n                <td>{{track.artist}}</td>\n                <td>{{track.album}}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/play.list.tpl.html", '<div class="col-md-10 col-md-offset-2 gutter" ng-file-drop="onFileSelect($files, playlistId, parentFolder, 1)" style="min-height: 500px;">\n    <div style="margin-bottom: 10px; text-align: right" class="pull-right">\n        <button ng-if="listMode == 0" class="btn btn-xs btn-primary" ng-click="addUrlWindow()"><i class="glyphicon glyphicon-link"></i><span class="hidden-xs"> {{::\'Add URL\'|t}}</span></button>\n        <button ng-if="listMode == 0" class="btn btn-xs btn-primary" ng-click="addFolderWindow()"><i class="glyphicon glyphicon-folder-open"></i><span class="hidden-xs">&nbsp;&nbsp;{{::\'Add Folder\'|t}}</span></button>\n        <button ng-if="listMode == 1" class="btn btn-xs btn-info" bs-dropdown="playlistDropdown" data-placement="bottom-right"><i class="glyphicon glyphicon-edit"></i> {{::\'Options\'|t}}</button>\n        <button ng-if="listMode == 2" class="btn btn-xs btn-primary" ng-click="clearQueue()"><i class="glyphicon glyphicon-remove"></i> {{::\'Remove all\'|t}}</button>\n        <button title="{{::\'Play folder\'|t}}" ng-if="listMode == 0" class="btn btn-xs btn-info" ng-click="playFolder()"><i class="glyphicon glyphicon-play"></i></button>\n        <button title="{{::\'Bulk Mode\'|t}}" class="btn btn-xs" ng-class="{\'btn-info\': !state.bulk, \'btn-primary\': state.bulk}" ng-click="toggleBulk()"><i class="glyphicon glyphicon-list"></i></button>\n    </div>\n    <h2 class="firstheader">{{name || \'All Music\'|t}} <small><span ng-if="onStartup" class="badge badge-default play-on-startup" style="margin-right: 5px">{{\'Startup\'|t}}</span><span ng-if="onIdle" class="badge badge-default play-when-idle">{{\'Idle\'|t}}</span></small></h2>\n    <div class="alert alert-info" ng-if="listMode == 1 && !state.tracks.length">{{::\'This playlist is still empty.\'|t}}</div>\n    <div class="alert alert-info" ng-if="listMode == 2 && !state.tracks.length">{{::\'The queue is empty.\'|t}}</div>\n    <div class="alert alert-info" ng-if="listMode == 0 && !state.tracks.length">{{::\'You have not uploaded any files yet.\'|t}}</div>\n    <div class="alert alert-info" ng-if="uiConfig.search">{{::\'Results for\'|t}} <strong>{{uiConfig.search}}</strong></div>\n    <table ng-if="extResults && extResults.length" class="table table-hover table-striped tracklist" style="table-layout: fixed">\n        <thead>\n            <tr>\n                <th style="width: 30px;"></th>\n                <th style="width: 44px;"></th>\n                <th style="text-transform: uppercase; font-size: 0.8em; cursor: pointer; min-width: 36%;" ng-click="sortBy(\'title\')">{{\'Title\'|t}} <span ng-if="sortKey == \'title\'" class="caret"></span></th>\n                <th style="width: 32px;"></th>\n                <th style="width: 50px;"></th>\n                <th class="hidden-xs" style="text-transform: uppercase; font-size: 0.8em; cursor: pointer;" ng-click="sortBy(\'artist\')">{{\'Artist\'|t}} <span ng-if="sortKey == \'artist\'" class="caret"></span></th>\n                <th class="visible-lg" style="text-transform: uppercase; font-size: 0.8em; cursor: pointer; width: 20%;" ng-click="sortBy(\'album\')">{{\'Source\'|t}} <span ng-if="sortKey == \'album\'" class="caret"></span></th>\n                <th style="width: 32px;"></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat="track in extResults track by $index" style="cursor: pointer" ng-dblclick="playUrl(track)">\n                <td style="padding: 0px; vertical-align: middle; width: 30px;">\n                    <img style="width: 30px; height: 30px;" ng-if="track.coverUrl" ng-src="/api/v1/bot/pluginData?plugin={{track.plugin}}&url={{track.coverUrl}}&sig={{track.sig}}&botId={{loginBotId}}"></img>\n                    <div style="width: 30px; height: 30px; background-color: rba(255,255,255,0.6);" ng-if="!track.coverUrl"></div>\n                </td>\n                <td class="trackno" style="min-width: 44px; max-width: 44px; width: 44px; text-align: right"><span class="playindex">{{$index + 1}}</span><span class="glyphicon glyphicon-play playbtn" ng-click="playUrl(track)"></span></td>\n                <td>{{track.title}}</td>\n                <td></td>\n                <td></td>\n                <td class="hidden-xs">{{track.artist}}</td>\n                <td class="visible-lg">{{track.plugin}}</td>\n                <td></td>\n            </tr>\n        </tbody>\n    </table>\n    <table ng-if="state.tracks.length" class="table table-hover table-striped tracklist" style="table-layout: fixed" infinite-scroll="displayMore()">\n        <thead>\n            <tr>\n                <th ng-if="state.bulk" style="width: 30px; margin-top: 0; margin-bottom: 0; padding-top: 0; padding-bottom: 5px;"><i ng-if="!track.virtual" class="glyphicon" style="cursor: pointer" ng-class="{\'glyphicon-unchecked\': !state.all, \'glyphicon-check\': state.all}" ng-click="bulkToggle($event)"></i></th>\n                <th style="width: 30px;"></th>\n                <th style="width: 44px;"></th>\n                <th style="text-transform: uppercase; font-size: 0.8em; cursor: pointer; min-width: 36%;" ng-click="sortBy(\'title\')">{{\'Title\'|t}} <span ng-if="sortKey == \'title\'" class="caret"></span></th>\n                <th style="width: 32px;"></th>\n                <th style="width: 50px;"></th>\n                <th class="hidden-xs" style="text-transform: uppercase; font-size: 0.8em; cursor: pointer;" ng-click="sortBy(\'artist\')">{{\'Artist\'|t}} <span ng-if="sortKey == \'artist\'" class="caret"></span></th>\n                <th class="visible-lg" style="text-transform: uppercase; font-size: 0.8em; cursor: pointer; width: 20%;" ng-click="sortBy(\'album\')">{{\'Album\'|t}} <span ng-if="sortKey == \'album\'" class="caret"></span></th>\n                <th style="width: 32px;"></th>\n            </tr>\n        </thead>\n        <tbody trackscroll>\n            <tr ng-drop-success="reorder($index, $data, $event, track)" ng-drag="state.bulk" ng-drag-data="getSelection" ng-repeat="track in state.tracks | trackfilter:uiConfig.search | limitTo:limit track by $index" style="cursor: pointer" ng-class="{\'warning\': (track.uuid == status.currentTrack.uuid && track.pid == undefined) || (playlistId == status.playlist && track.pid == status.playlistTrack), \'info\': $index == selected, \'success\': track.bulkSelected}" ng-dblclick="play((track.pid != undefined) ? track.pid : track.uuid, track)" ng-drop="{{listMode == 1 || track.type == \'folder\'}}" ng-mousedown="select($index, track, $event)">\n                <td ng-if="state.bulk"><i ng-if="!track.virtual" class="glyphicon" ng-class="{\'glyphicon-unchecked\': !track.bulkSelected, \'glyphicon-check\': track.bulkSelected}" ng-click="bulkSelect($index, track, $event)"></i></td>\n                <td ng-drag-handle style="padding: 0px; vertical-align: middle; width: 30px;">\n                    <img style="width: 30px; height: 30px;" ng-if="track.thumbnail" ng-src="/cache/{{track.thumbnail}}"></img>\n                    <div style="width: 30px; height: 30px; background-color: rba(255,255,255,0.6);" ng-if="!track.thumbnail"></div>\n                </td>\n                <td class="trackno" style="min-width: 44px; width: 44px; text-align: right"><i ng-if="track.type == \'folder\'" class="glyphicon glyphicon-folder-open" ng-click="play((track.pid != undefined) ? track.pid : track.uuid, track)"></i><span ng-if="track.type != \'folder\'" class="playindex">{{::$index + 1}}</span><span ng-if="track.type != \'folder\'" class="glyphicon glyphicon-play playbtn" ng-click="play((track.pid != undefined) ? track.pid : track.uuid)"></span><div ng-if="track.type != \'folder\'" class="eq" ng-click="play((track.pid != undefined) ? track.pid : track.uuid, track)"><div></div><div></div><div></div></div></td>\n                <td ng-drag-handle>{{track.displayTitle}}<div ng-if="showParents && track.parent"><a ng-click="play(parentLookup[track.parent].uuid, parentLookup[track.parent])" style="font-size: 0.8em">{{parentLookup[track.parent].title}}</a></div></td>\n                <td style="min-width: 32px; width: 32px"><i class="glyphicon glyphicon-th-large playdrop" bs-dropdown="dropdown"></i></td>\n                <td class="duration" style="width: 50px; text-align: right;"><span ng-if="track.type != \'folder\'">{{track.durationP}}</span></td>\n                <td ng-drag-handle class="hidden-xs">{{track.artist}}</td>\n                <td ng-drag-handle class="album visible-lg">{{track.album}}</td>\n                <td style="min-width: 32px; width: 32px; text-align: right"><i ng-if="hasPriv(userInfo, PRIV_DELETE_FILE)" class="glyphicon glyphicon-remove deletebtn" ng-click="remove($index)"></i></td>\n            </tr>\n        </tbody>\n    </table>\n    <div style="font-size: 11px; padding-top: 25px;">{{\'To be able to move files (drag\\\'n\\\'drop), please enable "Bulk Mode" at the top of this page.\'|t}}</div>\n     \x3c!--<div style="position: relative; display: inline-block; height: 200px; width: 200px; margin-right: 5px; background-size: cover;" ng-repeat="track in state.tracks | filter:search | limitTo:limit track by $index" ng-style="{\'background-image\':track.thumbnail ? \'url(/cache/\' + track.thumbnail + \')\' : \'\'}" ng-dblclick="play((track.pid != undefined) ? track.pid : track.uuid)"><div style="position: absolute; bottom: 0; left: 0; right: 0; padding: 8px; background-color: rgba(0,0,0,0.4); color: #fff; text-transform: uppercase;"><div style="font-size: 18px; line-height: 1.1em">{{track.title || track.filename}}</div><div style="margin-top: 3px; font-size: 12px; color: #ddd; line-height: 0.9em;">{{track.artist}}</div></div></div> --\x3e\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/play.renamePlaylist.tpl.html", '<form ng-submit="renamePlaylist(playlistRenameName)">\n\t<div class="modal-body">\n\t\t<input type="text" class="form-control" placeholder="Playlist name" ng-model="playlistRenameName" autofocus/>\n\t</div>\n\t<div class="modal-footer">\n\t    <button type="button" class="btn btn-default" ng-click="$hide()">{{\'Close\'|t}}</button>\n\t    <button type="submit" class="btn btn-primary">{{\'Rename\'|t}}</button>\n\t</div>\n</form>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/play.searchExt.tpl.html", '<div class="col-md-10">\n    <div ng-if="!tracks" class="alert alert-info">{{\'Hold on... searching...\'|t}}</div>\n    <table ng-if="tracks" class="table table-hover table-striped tracklist">\n        <tbody>\n            <tr ng-repeat="track in tracks track by $index" style="cursor: pointer" ng-dblclick="playUrl(track)">\n                <td class="trackno" style="min-width: 34px; max-width: 34px; width: 34px; text-align: right"><span class="playindex">{{$index + 1}}</span><span class="glyphicon glyphicon-play playbtn" ng-click="playUrl(track)"></span></td>\n                <td>{{track.title}}</td>\n                <td>{{track.plugin}}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/play.stations.tpl.html", '<div class="col-md-10 col-md-offset-2 gutter">\n    <form ng-submit="doSearch()">\n        <input type="search" class="form-control" ng-model="stationQuery" placeholder="{{\'Search\'|t}}..."/>\n    </form>\n    <div class="alert alert-info" style="margin-top: 15px" ng-if="!stations.length">{{\'Nothing found.\'|t}}</div>\n    <table class="table table-hover table-striped tracklist" style="width: 100%; table-layout: fixed;">\n        <tbody>\n            <tr ng-repeat="station in stations track by $index" style="cursor: pointer" ng-dblclick="playUrl(station)">\n                <td style="width: 30px"><span class="glyphicon glyphicon-plus playbtn" ng-click="add(station)" title="{{\'Add to All Music\'|t}}" bs-tooltip></span></td>\n                <td class="trackno" style="min-width: 34px; max-width: 34px; width: 34px; text-align: right"><span class="playindex">{{$index + 1}}</span><span class="glyphicon glyphicon-play playbtn" ng-click="playUrl(station)"></span></td>\n                <td>{{station.n}}</td>\n                \x3c!-- <td style="min-width: 32px; width: 32px"><i class="glyphicon glyphicon-th-large playbtn" bs-dropdown="dropdown"></i></td> --\x3e\n                <td>{{station.g}}</td>\n                <td style="text-align: right">{{station.b}}</td>\n                \x3c!-- <td ng-drag-handle class="album">{{station.u}}</td> --\x3e\n            </tr>\n        </tbody>\n    </table>\n    <div style="text-align: right"><small>courtesy of <a href="http://dir.xiph.org">dir.xiph.org</a></small></div>\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/play.tagedit.tpl.html", '<form ng-submit="updateTags()">\n\t<div class="modal-body">\n\t\t<div class="alert alert-danger" ng-if="error">{{error}}</div>\n\t\t<div class="row">\n\t\t\t<div class="col-md-8">\n\t\t\t\t<div class="form-group">\n\t\t\t\t\t<label for="title">{{\'Title\'|t}}</label>\n\t\t\t\t\t<input type="text" class="form-control" id="title" placeholder="" ng-model="track.title"/>\n\t\t\t\t</div>\n\t\t\t\t<div class="form-group">\n\t\t\t\t\t<label for="artist">{{\'Artist\'|t}}</label>\n\t\t\t\t\t<input type="text" class="form-control" id="artist" placeholder="" ng-model="track.artist"/>\n\t\t\t\t</div>\n\t\t\t\t<div class="form-group">\n\t\t\t\t\t<label for="album">{{\'Album\'|t}}</label>\n\t\t\t\t\t<input type="text" class="form-control" id="album" placeholder="" ng-model="track.album"/>\n\t\t\t\t</div>\n\t\t\t\t<div class="form-group">\n\t\t\t\t\t<input type="checkbox" ng-model="track.sfx"> {{\'SFX\'|t}}\n\t\t\t\t</div>\n\t\t\t\t<div class="row">\n\t\t\t\t\t<div class="col-md-3">\n\t\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t\t<label for="volume">{{\'Volume\'|t}}</label>\n\t\t\t\t\t\t\t<input type="text" style="max-width: 70px;" class="form-control" id="volume" placeholder="-20" ng-model="track.volume"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="col-md-5">\n\t\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t\t<label for="genre">{{\'Genre\'|t}}</label>\n\t\t\t\t\t\t\t<input type="text" class="form-control" id="genre" placeholder="Rock" ng-model="track.genre"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="col-md-4">\n\t\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t\t<label for="track">{{\'Track#\'|t}}</label>\n\t\t\t\t\t\t\t<input type="text" class="form-control" id="track" ng-model="track.track"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="col-md-4">\n\t\t\t\t<dl>\n\t\t\t\t\t<dt>Channels</dt>\n\t\t\t\t\t<dd>{{track.channels||\'-\'}}</dd>\n\t\t\t\t\t<dt>Samplerate</dt>\n\t\t\t\t\t<dd>{{track.samplerate||\'-\'}}</dd>\n\t\t\t\t\t<dt>Filesize</dt>\n\t\t\t\t\t<dd>{{track.filesize / 1024 / 1024||0 | number:2}} MiB</dd>\n\t\t\t\t\t<dt ng-if="track.bitrate">Bitrate</dt>\n\t\t\t\t\t<dd ng-if="track.bitrate">{{track.bitrate / 1000 || 0}} kbps</dd>\n\t\t\t\t</dl>\n\t\t\t</div>\n\t\t</div>\n\t\t<div style="text-align: right; opacity: 0.5;">\n\t\t\t<small>track://{{track.uuid}}</small>\n\t\t</div>\n\t</div>\n\t<div class="modal-footer">\n\t    <button type="button" class="btn btn-default" ng-click="$hide()">{{\'Cancel\'|t}}</button>\n\t    <button type="submit" class="btn btn-primary">{{\'Update\'|t}}</button>\n\t</div>\n</form>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/play.tpl.html", '<div class="container-fluid" ng-drag-start="setDrag(true)" ng-drag-stop="setDrag(false)">\n    <div class="row">\n        <div class="col-md-2 sidebar" ng-class="{visible: leftMenu}">\n            <div>\n                <div class="hidden-sm hidden-md hidden-lg hidden-xl basecolor" style="padding-top: 20px; padding-bottom: 20px;">\n                    <div ng-if="status.currentTrack.thumbnail" style="margin: 0 auto; width: 64px; height: 64px; background-image: url(/cache/{{status.currentTrack.thumbnail}}); background-repeat: none; background-size: cover; border-radius: 50%; margin-bottom: 8px"></div>\n                    <div style="text-align: center; font-size: 1.2em;">{{status.currentTrack.tempTitle || status.currentTrack.title}}</div>\n                    <div style="text-align: center;">{{status.currentTrack.tempArtist || status.currentTrack.artist}}</div>\n                </div>\n            \x3c!-- <div data-offset-top="-61" bs-affix> --\x3e\n\x3c!--\n                <div ng-if="status.currentTrack" style="margin-bottom: 15px">\n                    <div ng-if="status.currentTrack.thumbnail" style="background-image: url(/cache/{{status.currentTrack.thumbnail}}.jpg); height: 200px; background-size: contain; background-repeat: no-repeat; background-position: 50% 50%; margin-bottom: 10px">\n                    </div>\n                    <div style="text-align: center; font-size: 0.8em">{{status.currentTrack.artist}}</div>\n                    <div style="text-align: center">{{status.currentTrack.title}}</div>\n                    <div style="text-align: center; font-size: 0.8em">{{status.position | amDurationFormatTime:\'seconds\':true}}</div>\n                </div>\n--\x3e\n                <ul class="nav nav-pills nav-stacked">\n                    <li ui-sref-active="active"><a ui-sref="app.play.files">{{::\'All Music\'|t}}</a></li>\n                    <li ui-sref-active="active" ng-drop="true" ng-drop-success="dropToQueue($data)"><a ui-sref="app.play.queue">{{::\'Queue\'|t}}<span class="badge pull-right">{{status.queueLen}}</span></a></li>\n                    <li ui-sref-active="active" ng-if="hasPriv(userInfo, PRIV_UPLOAD_FILE)"><a ui-sref="app.play.upload">{{::\'Upload\'|t}}</a></li>\n                    <li ui-sref-active="active"><a ui-sref="app.play.stations">{{::\'Radio Stations\'|t}}</a></li>\n                </ul>\n                <hr>\n\n                <ul class="nav nav-pills nav-stacked">\n                    <li ng-if="hasPriv(userInfo, PRIV_CREATE_PLAYLIST)"><a href ng-click="createPlaylistDialog()"><i class="glyphicon glyphicon-plus"></i> {{::\'New playlist\'|t}}</a></li>\n                    <li ui-sref-active="active" ng-repeat="playlist in playlists | orderBy:\'name\'" ng-drop="true" ng-drop-success="dropToList(playlist.uuid, $data)"><a ui-sref="app.play.list({ playlistId: playlist.uuid})">{{playlist.name}}<span class="badge pull-right">{{playlist.count}}</span></a></li>\n                </ul>\n\n                \x3c!-- <div ng-show="dragging" ng-drop="true" ng-drop-success="onDropComplete($data,$event)">New playlist</div> --\x3e\n            </div>\n        </div>\n        <div ui-view></div>\n    </div>\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/play.upload.tpl.html", '<div class="col-md-10 col-md-offset-2 gutter">\n    <h2 class="firstheader">{{\'Upload\'|t}}</h2>\n    \x3c!-- Fixme: will be hidden if drag is unsupported - but then onclick won\'t work as well --\x3e\n    <div style="border-radius: 5px; border: 3px dashed #aaa; padding: 30px; font-size: 26px; text-align: center;" ng-file-select="onFileSelect($files)" ng-file-drop="onFileSelect($files)" ng-file-drag-over-class="optional-css-class-name-or-function" ng-show="dropSupported">{{\'drop files or click here\'|t}}<br/><span style="font-size: 12px">{{\'You can also just drag and drop your files onto the "All Music" list or other playlists directly.\'|t}}</span></div>\n    <div ng-file-drop-available="dropSupported=true" ng-show="!dropSupported">HTML5 Drop File is not supported!</div>\n\n    <h3>{{\'Uploaded Files\'|t}}<button class="btn btn-primary btn-xs pull-right" ng-click="clearUploadQueue()">{{\'Clear\'|t}}</button></h3>\n\n    <div class="alert alert-info" ng-if="!uploadFiles.length">{{\'You haven\\\'t uploaded any files recently.\'|t}}</div>\n    <table class="table table-hover table-striped tracklist">\n        <tbody>\n            <tr ng-repeat="file in uploadFiles" ng-dblclick="play(file.info.uuid)">\n                <td style="padding: 0px; vertical-align: middle; width: 30px;">\n                    <img style="width: 24px; height: 24px;" ng-if="file.info.thumbnail" ng-src="/cache/{{file.info.thumbnail}}"></img>\n                </td>\n                <td>{{file.info.artist || file.name}}</td>\n                <td>{{file.info.title || \'--\'}}</td>\n                <td>{{file.status}}</td>\n                <td>{{file.info.duration / 1000 | amDurationFormatTime:\'seconds\':true}}</td>\n            </tr>\n        </tbody>\n    </table>\n\n    <h3>{{\'Download Files\'|t}}<button class="btn btn-primary btn-xs pull-right" ng-click="clearJobs()">{{\'Clear\'|t}}</button></h3>\n    \x3c!-- <p>Supports URLs of YouTube, SoundCloud, Deezer &amp; more.</p> --\x3e\n    <div class="row">\n        <div class="col-md-10">\n            <input type="text" class="form-control" ng-model="dlJobUrl" placeholder="http://"/>   \n        </div>\n        <div class="col-md-2">\n            <button class="btn btn-primary btn-block" ng-click="addDLJob(dlJobUrl)">{{\'Add Job\'|t}}</button>  \n        </div>\n    </div>\n    <table class="table table-hover table-striped tracklist" ng-controller="jobs" style="margin-top: 15px;">\n        <tbody>\n            <tr ng-repeat="job in jobs" ng-dblclick="play(job.trackuuid)">\n                <td>{{job.url}}</td>\n                <td>{{job.bw}}</td>\n                <td>{{job.eta}}</td>\n                <td>{{job.size}}</td>\n                <td>{{job.msg || job.status}}</td>\n                <td><button ng-if="job.status != \'success\' && job.status != \'error\'" class="btn btn-error btn-xs" ng-click="cancelJob(job)">{{\'Cancel\'|t}}</button></td>\n            </tr>\n        </tbody>\n    </table>\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/playlist.new.tpl.html", '<form ng-submit="createPlaylist(playlistName, playlistUrl)">\n\t<div class="modal-body">\n\t\t<input type="text" class="form-control" placeholder="{{\'New playlist\'|t}}" ng-model="playlistName" autofocus/>\n\t\t<div class="checkbox">\n\t\t\t<label>\n\t\t\t\t<input type="checkbox" ng-click="advanced = !!!advanced"> {{\'Show advanced options\'|t}}\n\t\t\t</label>\n\t\t</div>\n\t\t<div ng-show="advanced">\n\t\t\t<h5>{{\'Import via youtube-dl\'|t}}</h5>\n\t\t\t\x3c!-- <small>{{\'Additionally, a subfolder will be created inside "All Music".\'|t}}</small> --\x3e\n\t\t\t<input type="text" class="form-control" placeholder="{{\'URL\'|t}}" ng-model="playlistUrl" autofocus/>\n\t\t</div>\n\t</div>\n\t<div class="modal-footer">\n\t    <button type="button" class="btn btn-default" ng-click="$hide()">{{\'Close\'|t}}</button>\n\t    <button type="submit" class="btn btn-primary">{{\'Add\'|t}}</button>\n\t</div>\n</form>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.debug.tpl.html", '<div class="col-md-10">\n    <h2 class="firstheader">Debug Console</h2>\n    <canvas id="noVNC_canvas" width="640px" height="80px">Canvas not supported.</canvas>\n<\/script>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.general.tpl.html", '<div class="col-md-10 col-md-offset-2">\n    <div ng-if="notice" class="alert alert-info">{{notice|t}}</div>\n    <div class="alert alert-danger" ng-if="error">{{error}}</div>\n    <div class="row" ng-if="!error">\n        <div class="col-md-6" ng-file-drop="setAvatar($files)">\n            <h2 class="firstheader">{{\'Instance Settings\'|t}}</h2>\n            <div ng-if="status.modes == 1 && settings.mode == 1" class="alert alert-info">{{\'Whisper-Mode is enabled. You can only hear music when you do have an active subscription.\'|t}}</div>\n            <div ng-if="hasFlag(256)" class="alert alert-warning">{{\'The bot could not acquire servergroups for the clients. Please enable b_virtualserver_servergroup_client_list for the bot if you need this feature.\'|t}}</div>\n            <div ng-if="hasFlag(512)" class="alert alert-warning">{{\'The bot has been accused of flooding the server. Please consider whitelisting.\'|t}}</div>\n            <div ng-if="hasFlag(1024)" class="alert alert-warning">{{\'The bot has been banned.\'|t}}</div>\n            <form role="form" autocomplete="off">\n                <div class="form-group">\n                    <label for="{{uuid}}-generalName">{{\'Name\'|t}}</label>\n                    <input autocomplete="off" type="text" maxlength="30" class="form-control" id="{{uuid}}-generalName" ng-model="settings.name" placeholder="My little Bot"/>\n                </div>\n                <div ng-if="settings.backend != \'discord\'">\n                    <div class="form-group has-success">\n                        <label for="{{uuid}}-generalNick">{{\'Nickname\'|t}}</label>\n                        <input autocomplete="off" type="text" maxlength="30" class="form-control" id="{{uuid}}-generalNick" ng-model="settings.nick" placeholder="Ultron"/>\n                    </div>\n                    <div class="form-group" ng-if="status.running">\n                        <label>{{\'Connected to\'|t}} <strong>{{status.serverUID}}</strong></label>\n                    </div>\n                    <div class="row">\n                        <div class="col-xs-5">\n                            <div class="form-group has-success">\n                                <label for="{{uuid}}-generalHost">{{\'Hostname / IP\'|t}}</label>\n                                <input autocomplete="off" ng-blur="checkHostPort()" ng-disabled="status.running" type="text" class="form-control" id="{{uuid}}-generalHost" ng-model="settings.serverHost" placeholder="127.0.0.1"/>\n                            </div>\n                        </div>\n                        <div class="col-xs-3">\n                            <div class="form-group has-success">\n                                <label for="{{uuid}}-generalPort">{{\'Port\'|t}}</label>\n                                <input autocomplete="off" ng-disabled="status.running" type="text" class="form-control" id="{{uuid}}-generalPort" ng-model="settings.serverPort" placeholder="1234"/>\n                            </div>\n                        </div>\n                        <div class="col-xs-4">\n                            <div class="form-group">\n                                <label for="{{uuid}}-generalPassword">{{\'Password\'|t}}</label>\n                                <input autocomplete="off" type="password" class="form-control" id="{{uuid}}-generalPassword" ng-model="settings.serverPassword" placeholder="v3rY53cr3t"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row" ng-if="settings.backend == \'ts3\'">\n                    <div class="col-xs-8 col-sm-9">\n                        <div class="form-group">\n                            <label for="defaultChannel">{{\'Default Channel\'|t}}</label>\n                            <input ng-if="!channelsFound" type="text" class="form-control" id="defaultChannel" ng-model="settings.channelName" placeholder="{{\'channel-id or leave empty for default channel\'|t}}"/>\n                            <select ng-if="channelsFound" ng-model="settings.channelName" class="form-control" ng-options="channel.id as channel.display disable when channel.disabled for channel in channels | orderBy:\'sort\'">\n                                <option value="">-- {{\'none\'|t}}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class="col-xs-4 col-sm-3">\n                        <div class="form-group">\n                            <label for="channelPassword">{{\'Ch-Password\'|t}}</label>\n                            <input autocomplete="off" type="password" class="form-control" id="channelPassword" ng-model="settings.channelPassword" placeholder="1234" autocomplete="off"/>\n                        </div>\n                    </div>\n                </div>\n                <div ng-if="settings.backend == \'discord\'">\n                    <div class="form-group">\n                        <label for="defaultChannel">{{\'Default Channel\'|t}}</label>\n                        <input ng-if="!channelsFound" type="text" class="form-control" id="defaultChannel" ng-model="settings.channelName" placeholder="{{\'channel-id or leave empty for default channel\'|t}}"/>\n                        <select ng-if="channelsFound" ng-model="settings.channelName" class="form-control" ng-options="channel.id as channel.display disable when channel.disabled for channel in channels | orderBy:\'sort\'">\n                            <option value="">-- {{\'none\'|t}}</option>\n                        </select>\n                        <a ng-href="https://discordapp.com/oauth2/authorize?client_id={{settings.authId}}&scope=bot&permissions=0">{{\'Click here to allow the bot to join your server.\'|t}}</a>\n                    </div>\n                </div>\n\t            <div ng-if="!channelsFound" class="alert alert-info">{{\'To get a list of all available channels, just let the bot connect first.\'|t}}</div>    \n                <div class="form-group" ng-if="status.modes == 1 && settings.backend == \'ts3\'">\n                    <label for="defaultChannel">{{\'Transmit-Mode\'|t}}</label>\n                    <select class="form-control" ng-model="settings.mode" convert-to-number>\n                        <option value="0">{{\'Default (to channel)\'|t}}</option>\n                        <option value="1">{{\'Subscription-Mode (via whisper)\'|t}}</option>\n                    </select>\n                </div>\n                <div class="row" ng-if="settings.backend == \'ts3\'">\n                    <div class="col-xs-9 col-sm-10">\n                        <div class="form-group">\n                            <label for="identity">{{\'Identity\'|t}}</label>\n                            <input type="text" class="form-control" id="identity" ng-model="settings.identity" placeholder="some valid identity"/>\n                        </div>\n                    </div>\n                    <div class="col-xs-3 col-sm-2">\n                        <div class="form-group">\n                            <label for="identity">{{\'Level\'|t}}</label>\n                            <input type="text" class="form-control" id="identity" ng-model="settings.identityLevel" disabled="disabled"/>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-xs-8">\n                        <div class="form-group">\n                            <label for="tts">{{\'TTS-Url\'|t}}</label>\n                            <input type="text" class="form-control" id="tts" ng-model="settings.ttsExternalURL" placeholder=""/>\n                        </div>\n                    </div>\n                    <div class="col-xs-2">\n                        <div class="form-group">\n                            <label for="ttslocale">{{\'Locale\'|t}}</label>\n                            <input type="text" class="form-control" id="ttslocale" ng-model="settings.ttsDefaultLocale" placeholder=""/>\n                        </div>\n                    </div>\n                    <div class="col-xs-2">\n                        <div class="form-group">\n                            <label for="ttsvolume">{{\'Volume\'|t}}</label>\n                            <input type="text" class="form-control" id="ttsvolume" ng-model="settings.ttsVolume" placeholder="-0"/>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-6">\n                        <div class="form-group">\n                            <label for="fadeTime">{{\'Fade duration (in ms, 0 to disable)\'|t}}</label>\n                            <input type="text" class="form-control" id="fadeTime" ng-model="settings.fadeTime" placeholder=""/>\n                        </div>\n                    </div>\n                    <div class="col-md-6">\n                        <div class="form-group">\n                            <label for="commandPrefix">{{\'Command Prefix\'|t}}</label>\n                            <input type="text" class="form-control" id="commandPrefix" ng-model="settings.commandPrefix" placeholder=""/>\n                        </div>\n                    </div>\n                </div>\n                <div class="checkbox" ng-if="settings.backend == \'ts3\'">\n                    <label>\n                        <input type="checkbox" ng-model="settings.updateDescription" value="1"/> {{\'Set track info as description\'|t}}\n                    </label>\n                </div>\n                <div class="checkbox" ng-if="settings.backend == \'ts3\'">\n                    <label>\n                        <input type="checkbox" ng-model="settings.announce" value="1"/> {{\'Announce tracks\'|t}}\n                    </label>\n                </div>\n                <div class="row" ng-if="settings.announce == 1">\n                    <div class="col-md-1"></div>\n                    <div class="col-md-6">\n                        <div class="form-group">\n                            <label for="annstring">{{\'Announce-String\'|t}}</label>\n                            <input type="text" class="form-control" id="annstring" ng-model="settings.announceString" placeholder="Now playing: %s"/>\n                        </div>\n                    </div>\n                    <div class="col-md-5"></div>\n                </div>\n                <div class="checkbox">\n                    <label>\n                        <input type="checkbox" ng-model="settings.enableDucking" value="1"/> {{\'Enable ducking\'|t}}\n                    </label>\n                </div>\n                <div class="row" ng-if="settings.enableDucking == 1">\n                    <div class="col-md-1"></div>\n                    <div class="col-md-6">\n                        <div class="form-group">\n                            <label for="duckingVolume">{{\'Duck to (in %)\'|t}}</label>\n                            <input type="text" class="form-control" id="duckingVolume" ng-model="settings.duckingVolume" placeholder=""/>\n                        </div>\n                    </div>\n                    <div class="col-md-5"></div>\n                </div>\n                <div class="checkbox" ng-if="settings.backend == \'ts3\'">\n                    <label>\n                        <input type="checkbox" ng-model="settings.channelCommander" value="1"/> {{\'Become "Channel-Commander"\'|t}}\n                    </label>\n                </div>\n                <div class="checkbox">\n                    <label>\n                        <input type="checkbox" ng-model="settings.ignoreChatServer" value="1"/> {{\'Ignore commands via server-chat\'|t}}\n                    </label>\n                </div>\n                <div class="checkbox">\n                    <label>\n                        <input type="checkbox" ng-model="settings.ignoreChatPrivate" value="1"/> {{\'Ignore commands via private message\'|t}}\n                    </label>\n                </div>\n                <div class="checkbox">\n                    <label>\n                        <input type="checkbox" ng-model="settings.ignoreChatChannel" value="1"/> {{\'Ignore commands via channel-chat\'|t}}\n                    </label>\n                </div>\n                <button class="btn btn-primary" ng-click="save()">{{\'Save changes\'|t}}</button> <button ng-disabled="!status.running" class="btn btn-default pull-right" ng-click="deleteAvatar()">{{\'Delete Avatar\'|t}}</button> <span ng-disabled="!status.running" class="btn btn-info btn-file pull-right" style="margin-right: 5px">{{\'Upload Avatar\'|t}} <input type="file" ng-file-select="setAvatar($files)"></span>\n\n                <div style="margin-top: 10px">\n                    <div class="row" ng-if="settings.startupTrack != \'\'">\n                        <div class="col-md-8">\n                            <div class="form-group">\n                                <label for="tts">{{\'Play on startup\'|t}}</label><br/>\n                                <button ng-click="removeStartupTrack()" class="btn btn-sm">{{\'Remove\'|t}}</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row" ng-if="settings.idleTrack != \'\'">\n                        <div class="col-md-8">\n                            <div class="form-group">\n                                <label for="tts">{{\'Play when idle\'|t}}</label><br/>\n                                <button ng-click="removeIdleTrack()" class="btn btn-sm">{{\'Remove\'|t}}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <small style="padding-top: 15px">{{\'Instance-ID\'|t}}: {{uuid}}</small>\n            </form>\n        </div>\n        <div class="col-md-6">\n            <h3>{{\'Help\'|t}}</h3>\n' + "            <dl><dt>{{'Name'|t}}</dt><dd>{{'Descriptive name for the instance'|t}}</dd></dl>\n            <dl ng-if=\"settings.backend == 'ts3'\"><dt>{{'Nickname'|t}}</dt><dd>{{'Enter a name that will be shown to others - it has to be unique on the server'|t}}</dd></dl>\n            <dl ng-if=\"settings.backend == 'ts3'\"><dt>{{'Hostname / IP'|t}}</dt><dd>{{'Enter the hostname or IP-Address of the server'|t}}</dd></dl>\n            <dl ng-if=\"settings.backend == 'ts3'\"><dt>{{'Port'|t}}</dt><dd>{{'Enter the port of the server (usually 9987)'|t}}</dd></dl>\n            <dl ng-if=\"settings.backend == 'ts3'\"><dt>{{'Password'|t}}</dt><dd>{{'Enter the server-password here'|t}}</dd></dl>\n            <dl ng-if=\"settings.backend == 'ts3'\"><dt>{{'Default Channel'|t}}</dt><dd>{{'Select a channel that the bot should try to join upon connection. The bot has to already be connected in order to list all available channels'|t}}</dd></dl>\n            <dl ng-if=\"settings.backend == 'ts3'\"><dt>{{'Ch-Password'|t}}</dt><dd>{{'Enter the channel-password if one is actually set'|t}}</dd></dl>\n            <dl ng-if=\"status.modes == 1 && settings.backend == 'ts3'\"><dt>{{'Transmit-Mode'|t}}</dt><dd>{{'By default the bot transmits audio to its channel. If you enable the subscription-mode, the bot can send audio to every client that subscribes via the \"!sub\" command. If no subscription is active, the bot will stream to its channel like in default mode.'|t}}</dd></dl>\n            <dl ng-if=\"settings.backend == 'ts3'\"><dt>{{'Identity'|t}}</dt><dd>{{'Each client needs to have a unique identity. Privileges on the server always refer to this identity. You can create your own in your local TS Client and export it. In the exported file, you can then find the identity-string.'|t}} <u>{{'For security reasons this is always recommended.'|t}}</u></dd></dl>\n            <dl><dt>{{'TTS-Url'|t}}</dt><dd>{{'You can define an external service to be used for Text-to-Speech here. Enter a valid URL here and use the variables __TEXT and __LOCALE - those get replaced by the corresponding text or locale setting later on.'|t}}</dd></dl>\n            <dl><dt>{{'Locale'|t}}</dt><dd>{{'The default-locale that will be used as __LOCALE parameter, when no locale has been specified explicitely.'|t}}</dd></dl>\n            <dl ng-if=\"settings.backend == 'ts3'\"><dt>{{'Announce tracks'|t}}</dt><dd>{{'If checked, the bot will announce the songs it plays back in the channel chat.'|t}} <u>{{'Make sure the bot has the privilege to write there or it won\\'t work.'|t}}</u></dd></dl>\n            <dl ng-if=\"settings.announce == 1\"><dt>{{'Announce-String'|t}}</dt><dd>{{'The text that should be displayed when announcing a text. Use %a for artist, %t for title or %s for a combination of both (preferred).'|t}} {{'%i will get replaced by the username of the user that requested the track.'|t}}</dd></dl>\n            <dl><dt>{{'Enable ducking'|t}}</dt><dd>{{'Reduce the volume of the music when someone else in the channel is talking.'|t}}</dd></dl>\n            <dl ng-if=\"settings.backend == 'ts3'\"><dt>{{'Become \"Channel-Commander\"'|t}}</dt><dd>{{'Sets the Channel-Commander-Flag for the bot. This requires that the bot has the permissions to do so.'|t}}</dd></dl>\n        </div>\n    </div>\n</div>")
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.info.tpl.html", '<div class="col-md-10 col-md-offset-2">\n    <h2 class="firstheader">{{\'Information\'|t}}</h2>\n    <ul class="nav nav-tabs">\n        <li role="presentation" ng-class="{\'active\': tab == \'limits\'}"><a href ng-click="tab = \'limits\'">{{\'Limits\'|t}}</a></li>\n        <li role="presentation" ng-class="{\'active\': tab == \'commands\'}"><a href ng-click="tab = \'commands\'">{{\'Commands\'|t}}</a></li>\n        <li role="presentation" ng-class="{\'active\': tab == \'formats\'}"><a href ng-click="tab = \'formats\'">{{\'Formats &amp; Codecs\'|t}}</a></li>\n        <li role="presentation" ng-class="{\'active\': tab == \'changes\'}"><a href ng-click="tab = \'changes\'">{{\'Changelog\'|t}}</a></li>\n        <li role="presentation" ng-class="{\'active\': tab == \'about\'}"><a href ng-click="tab = \'about\'">{{\'About...\'|t}}</a></li>\n    </ul>\n    <div ng-if="tab == \'limits\'">\n        <div style="padding-top: 15px;">\n            <dl class="dl-horizontal">\n                <dt>{{\'Max. Users\'|t}}</dt>\n                <dd>{{info.bot.limitUsers}}</dd>\n            </dl>\n            <dl class="dl-horizontal">\n                <dt>{{\'Max. Files\'|t}}</dt>\n                <dd>{{info.bot.limitFiles}}</dd>\n            </dl>\n            <dl class="dl-horizontal">\n                <dt>{{\'Max. Space\'|t}}</dt>\n                <dd>{{info.bot.limitSpace | number:2}} MB; used {{(info.bot.spaceUsed || 0) | number:2}} MB</dd>\n            </dl>\n            <dl class="dl-horizontal">\n                <dt>{{\'Max. Playlists\'|t}}</dt>\n                <dd>{{info.bot.limitPlaylists}}</dd>\n            </dl>\n            <dl class="dl-horizontal">\n                <dt>{{\'Max. Instances\'|t}}</dt>\n                <dd>{{info.bot.limitInstances}}</dd>\n            </dl>\n            <dl class="dl-horizontal">\n                <dt>{{\'Memory Usage\'|t}}</dt>\n                <dd>{{info.usageMemory | number:2}} MB</dd>\n            </dl>\n        </div>\n    </div>\n    <div ng-if="tab == \'commands\'">\n        <h3>{{\'Anonymous usage\'|t}}</h3>\n        <div class="row">\n            <div class="col-md-3">!register &lt;nickname&gt;</div>\n            <div class="col-md-7">{{\'Registers a new user bound to the TeamSpeak-Account you are using. This account has no privileges by default but can be edited by the bot administrators.\'|t}}</div>\n        </div>\n        <div class="row" ng-if="status.modes == 1">\n            <div class="col-md-3">!sub</div>\n            <div class="col-md-7">{{\'Subscribe to bot\'|t}} ({{\'subscription transfer-mode only\'|t}})</div>\n        </div>\n        <div class="row" ng-if="status.modes == 1">\n            <div class="col-md-3">!unsub</div>\n            <div class="col-md-7">{{\'Unsubscribe from bot\'|t}} ({{\'subscription transfer-mode only\'|t}})</div>\n        </div>\n        <h3>{{\'Authorized users\'|t}}</h3>\n        <blockquote>{{\'The icons represent the required permissions.\'|t}}</blockquote>\n        <div class="row">\n            <div class="col-xs-3">!password &lt;value&gt;</div>\n            <div class="col-xs-1">\n            </div>\n            <div class="col-xs-6">{{\'change your password to &lt;value&gt;\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-md-3">!playing</div>\n            <div class="col-xs-1">\n            </div>\n            <div class="col-md-6">{{\'Display the currently playing song\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!next</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Playback"></i>\n            </div>\n            <div class="col-xs-6">{{\'playback the next track\'|t}} ({{\'only when a playlist is active\'|t}})</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!prev</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Playback"></i>\n            </div>\n            <div class="col-xs-6">{{\'playback the previous track\'|t}} ({{\'only when a playlist is active\'|t}})</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!search &lt;{{\'searchstring\'|t}}&gt;</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Playback"></i> {{\'or\'|t}} <i class="glyphicon glyphicon-plus priv-enabled" title="Enqueue"></i>\n            </div>\n            <div class="col-xs-6">{{\'search for tracks\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!play &lt;{{\'searchstring\'|t}} / uuid&gt;</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Playback"></i>\n            </div>\n            <div class="col-xs-6">{{\'playback a track by its id or search for a track and playback the first match\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!queue</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Playback"></i> {{\'or\'|t}} <i class="glyphicon glyphicon-plus priv-enabled" title="Enqueue"></i>\n            </div>\n            <div class="col-xs-6">{{\'resume queue playback\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!queue &lt;{{\'searchstring\'|t}} / uuid&gt;</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Playback"></i> {{\'or\'|t}} <i class="glyphicon glyphicon-plus priv-enabled" title="Enqueue"></i>\n            </div>\n            <div class="col-xs-6">{{\'enqueue a track by its id or search for a track and enqueue the first match\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!queuenext &lt;{{\'searchstring\'|t}} / uuid&gt;</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-play-circle priv-enabled" title="Skip queue"></i>\n            </div>\n            <div class="col-xs-6">{{\'prepend a track by its id or search for a track and prepend the first match to the queue\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!stop</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Playback"></i>\n            </div>\n            <div class="col-xs-6">{{\'stop playback\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!!stop</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Playback"></i> <i class="glyphicon glyphicon-cog priv-enabled" title="{{\'Edit bot settings\'|t}}"></i>\n            </div>\n            <div class="col-xs-6">{{\'stop playback and remove idle-track\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!volume up</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Playback"></i>\n            </div>\n            <div class="col-xs-6">{{\'increase the volume\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!volume down</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Playback"></i>\n            </div>\n            <div class="col-xs-6">{{\'decrease the volume\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!volume &lt;value&gt;</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Playback"></i>\n            </div>\n            <div class="col-xs-6">{{\'set the volume to &lt;value&gt; (between 0 and 100)\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!playlist &lt;playlistname&gt;</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Playback"></i>\n            </div>\n            <div class="col-xs-6">{{\'starts playing back the playlist &lt;playlistname&gt;\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!stream &lt;url&gt;</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Playback"></i>\n            </div>\n            <div class="col-xs-6">{{\'stream from &lt;url&gt;; this may be http-streams like shoutcast / icecast or just remote soundfiles\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!say &lt;text&gt;</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Playback"></i>\n            </div>\n            <div class="col-xs-6">{{\'use text-to-speech (if configured) to say the given text\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!qyt &lt;url&gt;</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Playback"></i> {{\'or\'|t}} <i class="glyphicon glyphicon-plus priv-enabled" title="Enqueue"></i>\n            </div>\n            <div class="col-xs-6">{{\'enqueue an &lt;url&gt; via external youtube-dl (if enabled); beware: the file will be downloaded first and played back afterwards, so there might be a slight delay before playback starts\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!yt &lt;url&gt;</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Upload"></i>\n            </div>\n            <div class="col-xs-6">{{\'playback an &lt;url&gt; via external youtube-dl (if enabled); beware: the file will be downloaded first and played back afterwards, so there might be a slight delay before playback starts\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!ytdl &lt;url&gt;</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-cloud-upload priv-enabled" title="Upload"></i>\n            </div>\n            <div class="col-xs-6">{{\'playback an &lt;url&gt; via external youtube-dl (if enabled); beware: the file will be downloaded first and played back afterwards, so there might be a slight delay before playback starts\'|t}}; {{\'additionally, the file will be stored\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!qytdl &lt;url&gt;</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-cloud-upload priv-enabled" title="Upload"></i>\n            </div>\n            <div class="col-xs-6">{{\'add an &lt;url&gt; via external youtube-dl (if enabled) to the queue; beware: the file will be downloaded first and enqueued afterwards, so there might be a slight delay before playback starts\'|t}}; {{\'additionally, the file will be stored\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!shuffle</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Playback"></i>\n            </div>\n            <div class="col-xs-6">{{\'toggle shuffle\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!repeat</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-music priv-enabled" title="Playback"></i>\n            </div>\n            <div class="col-xs-6">{{\'toggle repeat\'|t}}</div>\n        </div>\n        <div class="row" ng-if="status.modes == 1">\n            <div class="col-xs-3">!mode &lt;mode&gt;</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-cog priv-enabled" title="{{\'Edit bot settings\'|t}}"></i>\n            </div>\n            <div class="col-xs-6">{{\'change transfer mode; 0 = to channel, 1 = subscription mode\'|t}}</div>\n        </div>\n        <div class="row" ng-if="status.modes == 1">\n            <div class="col-xs-3">!subchan</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-cog priv-enabled" title="{{\'Edit bot settings\'|t}}"></i>\n            </div>\n            <div class="col-xs-6">{{\'add subscription for channel (the user is currently in)\'|t}} ({{\'subscription transfer-mode only\'|t}})</div>\n        </div>\n        <div class="row" ng-if="status.modes == 1">\n            <div class="col-xs-3">!unsubchan</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-cog priv-enabled" title="{{\'Edit bot settings\'|t}}"></i>\n            </div>\n            <div class="col-xs-6">{{\'remove subscription for channel (the user is currently in)\'|t}} ({{\'subscription transfer-mode only\'|t}})</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!registration &lt;enable|disable&gt;</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-cog priv-enabled" title="{{\'Edit bot settings\'|t}}"></i>\n            </div>\n            <div class="col-xs-6">{{\'enable / disable user registration via chat\'|t}}</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-3">!prefix &lt;new prefix&gt;</div>\n            <div class="col-xs-1">\n                <i class="glyphicon glyphicon-cog priv-enabled" title="{{\'Edit bot settings\'|t}}"></i>\n            </div>\n            <div class="col-xs-6">{{\'change the prefix for all core commands to "new prefix", default is "!"\'|t}}</div>\n        </div>\n    </div>\n    <div ng-if="tab == \'formats\'">\n        <div class="row">\n            <div class="col-md-6">\n                <h3>{{\'Supported File-Formats\'|t}}</h3>\n                <div ng-repeat="format in info.system.formats track by $index">{{format}}</div>\n            </div>\n            <div class="col-md-6">\n                <h3>{{\'Supported Codecs\'|t}}</h3>\n                <div ng-repeat="codec in info.system.codecs track by $index">{{codec}}</div>\n            </div>\n        </div>\n    </div>\n    <div ng-if="tab == \'changes\'">\n        <h4>1.0b5</h4>\n        <ul>\n            <li>fix: make sure event \'load\' always fires</li>\n            <li>fix: add invoker to !yt call</li>\n        </ul>\n        <h4>1.0b4</h4>\n        <ul>\n            <li>fix: add support for updated Discord</li>\n            <li>fix: make exec/query in db module work again as expected</li>\n            <li>fix: make helpers.toString() accept byte arrays</li>\n        </ul>\n        <h4>1.0b3</h4>\n        <ul>\n            <li>enh: support TS3 3.3+</li>\n            <li>enh: add some missing Discord functions to scripting engine (reactions mainly)</li>\n            <li>fix: remove a deadlock that could happen when certain events happen while the scripting engine is reloading</li>\n            <li>fix: properly handle multithreading to singlethreading for v8</li>\n        </ul>\n        <h4>1.0b2</h4>\n        <ul>\n            <li>enh: optimize reseeding when playing playlist on idle</li>\n            <li>enh: add sourceURL field to track info to store external urls</li>\n            <li>enh: improve memory usage by roughly 75%</li>\n            <li>enh: improve CPU usage slightly</li>\n            <li>fix: prevent a crash in v8 when the GC is on heavy load</li>\n            <li>fix: allow channel as parameter to createChannel again</li>\n            <li>fix: memory leak that sometimes appeared when reconnecting to TS3</li>\n        </ul>\n        <h4>1.0b1</h4>\n        <ul>\n            <li>enh: change event handling to be more predictable</li>\n            <li>enh: add alias user.groupId() for user.tsGroupId()</li>\n            <li>enh: add alias user.uid() for user.tsUid()</li>\n            <li>enh: add user.setGroupId(groupId)</li>\n            <li>fix: repair functions like addToServerGroup() when called with a native object</li>\n            <li>fix: repair .tsGroupId() for user objects - now properly returns a string</li>\n        </ul>\n        <h4>1.0a6</h4>\n        <ul>\n            <li>feat: add interface to retrieve server information via scripting (backend.extended())</li>\n            <li>feat: introduce default values to settings</li>\n            <li>fix: repair saveConfig()</li>\n            <li>fix: improve handling of ICY stream information (mainly for radio streams)</li>\n        </ul>\n        <h4>1.0a4</h4>\n        <ul>\n            <li>feat: add option to store tracks outside of the bots data directory</li>\n        </ul>\n        <h4>1.0a1</h4>\n        <ul>\n            <li>feat: change JavaScript engine to v8</li>\n            <li>feat: integrate runtime for TTS modules</li>\n            <li>enh: improve handling of permissions for scripts</li>\n            <li>enh: improve interoperability with docker hosts</li>\n            <li>enh: improve audio detection of streaming proxy</li>\n            <li>enh: apply better defaults settings for less CPU usage</li>\n            <li>enh: allow Discord instances to leave voice channels without disconnecting entirely</li>\n            <li>enh: make notifications on the webinterface stay longer</li>\n            <li>enh: remove !help from standard commands - !sinusbot has been added to be able to identify the bot</li>\n            <li>enh: add command library by Multivitamin to streamline help commands</li>\n            <li>fix: adjust TS3 databases to work with latest client updates</li>\n            <li>fix: change placeholders in tag editor</li>\n            <li>fix: use correct mode for chat messages on Discord</li>\n            <li>fix: make client moving on Discord work</li>\n            <li>fix: recognize roles as servergroups for Discord</li>\n            <li>several other speed and stability improvements (I hope they overweigh the instabilities that may be introduced by the new scripting engine)</li>\n            <li>several other frontend improvements</li>\n        </ul>\n        <h4>0.14</h4>\n        <ul>\n            <li>feat: support Discord roles</li>\n            <li>feat: new tool/mode to stream audio from your PC directly into the bot</li>\n            <li>feat(vm): add support for local sqlite databases</li>\n            <li>feat(vm): add getChannelsByName(name) to return an array of channels matching the given name</li>\n            <li>feat(vm): add exec module (requires permission)</li>\n            <li>feat(vm): add fs module (requires permission)</li>\n            <li>feat(vm): add sfs (simple fs) module, only grant limited access to fs</li>\n            <li>feat(vm): add crypto module with pbkdf2 and some nacl functions</li>\n            <li>feat(vm): add support for new folder structures for scripts (e.g. ./scripts/%scriptname%/%scriptname%.js)</li>\n            <li>feat: add option for multifile script archives in store</li>\n            <li>feat: user registration can now be enabled/disabled via !registration enable / !registration disable</li>\n            <li>enh(vm): add http module with simpleRequest() similar to sinusbot.http</li>\n            <li>enh(vm): add support for websocket connections as (client) via net module</li>\n            <li>enh: add shortcut to trigger script events from the web interface</li>\n            <li>feat: support live streams (via ytdl)</li>\n            <li>fix: display temporary track info again in the webinterface (radio stations etc.)</li>\n            <li>fix: always allow GIF when using the graphics module</li>\n            <li>fix: return correct connection status for Discord</li>\n            <li>fix: improve event handling in the web interface</li>\n            <li>fix: improve chat command handling on Discord</li>\n            <li>fix: honor new UserAgent setting from config.ini for streaming, downloads and scripting engine</li>\n            <li>fix: make !next not trigger twice when streaming</li>\n            <li>fix: when switching channels from the settings page, honor the new password, if given</li>\n            <li>fix: make sure cache directories are created correctly</li>\n            <li>fix: make setAudioFilter() permanent</li>\n            <li>fix: remove clients from old channel on move (discord)</li>\n            <li>fix: improve category handling for Discord</li>\n            <li>fix: improve channel handling for Discord</li>\n            <li>fix(vm): actually call the callback on successful db.connect()</li>\n            <li>fix: command prefix can now be changed with e.g. "!prefix ." - this changes the prefix to ".", so that further commands will need to be called like ".play"</li>\n            <li>enh(vm): add queryParams() map to script events for easier handling</li>\n        </ul>\n        <h4>0.13.37</h4>\n        <ul>\n            <li>feat(vm): add new interface to manage SinusBot accounts</li>\n            <li>feat(vm): add access to channel permissions (to modify required join power and such)</li>\n            <li>feat(vm): add access to servergroup permissions</li>\n            <li>feat(vm): add access to channelgroup permissions</li>\n            <li>enh: improve handling of ytdl requests; add option to allow chunked downloads</li>\n            <li>enh: improve consistency for terms \'bot\' / \'instance\' / \'client\' (instance settings page, mainly)</li>\n            <li>enh: improve script event performance</li>\n            <li>enh: improve handling of authentication failure at Discord; auth-token should be removed and requested again in the frontend</li>\n            <li>enh: increased hard user limit from 40 to 1000</li>\n            <li>enh: add !qytdl command</li>\n            <li>enh(vm): add source() as function for playlists; returns the source-URL if the playlist has been imported via ytdl</li>\n            <li>enh(vm): add maxFamilyClients</li>\n            <li>fix: ignore IP headers when the request is not proxied (was introduced in 0.10.x, thanks EchtkPvL)</li>\n            <li>fix: improve handling of albumart via ytdl</li>\n            <li>fix: prevent callbacks not getting recognized properly; this led to unexpected behavior and timeouts when doing many chat/servergroup/etc actions within a short amount of time</li>\n            <li>fix: prevent layout glitch when logged out and not having a theme loaded</li>\n            <li>fix: improve command responses</li>\n            <li>fix: speech recognition; change audio.setAudioReturnChannel() to accept an int bitmask instead of bool - 0x02 is used for speech recognition</li>\n            <li>fix: when using yt with the queue, make sure the track gets queued also if it\'s "just" a duplicate</li>\n        </ul>\n        <h4>0.12.0</h4>\n        <ul>\n            <li>feat(vm): add possibility to create banners from scripts (experimental)</li>\n            <li>feat(vm): add icon information to server/channelgroups</li>\n            <li>fix: re-add ws support for scripting</li>\n            <li>fix: re-add "login failed" message</li>\n            <li>enh: highlight idle/startup tracks</li>\n            <li>enh: add QT_XCB_GL_INTEGRATION environment variable to simplify installation (thanks Haxe18)</li>\n        </ul>\n        <h4>0.11.1</h4>\n        <ul>\n            <li>fix: make script imports more reliable</li>\n            <li>fix: improve error message handling from the TS client to prevent spam</li>\n            <li>fix(vm): fix public script api</li>\n            <li>fix: add message when certain limits are reached</li>\n            <li>fix: use the upload limit value again</li>\n            <li>fix: make realtime messaging work better with nginx reverse proxies</li>\n        </ul>\n        <h4>0.11.0</h4>\n        <ul>\n            <li>enh: introduce support for TS client 3.1.6+</li>\n            <li>enh: add script interoperability via require; dependency system will follow (experimental)</li>\n            <li>fix: prevent bulk deletion from crashing the bot in some rare cases</li>\n            <li>fix: improve fake x server so that it can handle new payloads required by TS 3.1.5+</li>\n        </ul>\n        <h4>0.10.8</h4>\n        <ul>\n            <li>fix: add ability to use login api with urlencoded body instead of json</li>\n            <li>fix: make webinterfaces for plugins work again</li>\n            <li>fix: make SSL support work again</li>\n            <li>fix: make sure only one master track gets played at a time</li>\n            <li>enh: automatically use let\'s encrypt if no certificates are given, ssl is enabled and the listen port is 443</li>\n        </ul>\n        <h4>0.10.7</h4>\n        <ul>\n            <li>enh: improve teamspeak connection handling</li>\n            <li>enh(vm): further improve discord connection handling</li>\n            <li>enh(vm): improve scripting error messages for some rarer cases</li>\n            <li>enh(vm): add raw discord events to event manager</li>\n            <li>enh(vm): make engine.log accept multiple parameters and improve logging</li>\n            <li>fix(vm/ts): channel deletion delay should work now</li>\n            <li>fix: close connections to the update server properly</li>\n            <li>fix(vm): make sure track playback callback gets called only once</li>\n            <li>chore: remove support for legacy licenses (> 1.5 years old, please just request a new one)</li>\n            <li>chore: change http backend (slowed down development)</li>\n            <li>removed(vm): removed sinusbot.on() and sinusbot.broadcast() / sinusbot.multicast() as part of scripting engine migration; these really slowed down development so they eventually had to go</li>\n        </ul>\n        <h4>0.9.21</h4>\n        <ul>\n            <li>enh(vm): fix the queue/next command</li>\n        </ul>\n        <h4>0.9.20</h4>\n        <ul>\n            <li>enh: improve the audio mixer so that it can handle several streams at the same time (to create ambience sounds for example)</li>\n            <li>enh(vm): adjust the scripting engine so that it can handle multiple streams (everything audio is a stream, not to be mixed up with streaming audio from the internets); docs will follow</li>\n            <li>enh(vm): make .play() to return a unique stream id (was bool)</li>\n            <li>enh(vm): add an optional parameter to stop that will take said unique stream id to only stop a certain audio stream</li>\n            <li>enh(vm): add audio.setStreamVolume(streamId, volume)</li>\n            <li>enh(vm): introduce aliases for streams; whenever starting a new stream using an already existant alias, the old stream will be stopped - aliases can be defined by appending &amp;alias=theAlias to the track://-url</li>\n            <li>enh(vm): add module ws for websocket communication between userdefined pages and the scripting engine</li>\n        </ul>\n        <h4>0.9.19</h4>\n        <ul>\n            <li>enh(discord): improve disconnect/reconnect handling</li>\n            <li>enh(vm): add invoker to channelCreate/Update/Delete events</li>\n            <li>enh(vm): add enqueueYt / enqueueYtdl as commands</li>\n            <li>enh(vm): add setDescription as method for clients</li>\n            <li>enh(vm): add events serverGroupAdded / serverGroupRemoved</li>\n            <li>enh(vm): add .url() to playlist tracks</li>\n            <li>enh(discord): setDescription will now update the "game"</li>\n            <li>enh(vm/ts): add neededTalkPower / deleteDelay / icon to createChannel / updateChannel</li>\n            <li>enh: improve way to transport audio to external processes</li>\n            <li>fix(vm): make codec/codecQuality/maxClients/order work for channel creation</li>\n            <li>fix(vm): make addToServerGroup() accept int / string / serverGroup-object</li>\n            <li>fix(vm): correctly get channel description</li>\n            <li>fix(ts): correctly interpret server bans (also: fix subscription bug)</li>\n            <li>enh: allow %artist% / %album% / %title% in announce string</li>\n        </ul>\n        <h4>0.9.18</h4>\n        <ul>\n            <li>feat(vm): added clientDeaf / clientUndeaf</li>\n            <li>feat(vm): added udp to allowed protocols</li>\n            <li>enh: hopefully optimize compatibility with streaming servers</li>\n            <li>fix(discord): list channels correctly</li>\n        </ul>\n        <h4>0.9.17</h4>\n        <ul>\n            <li>feat(vm): add initial channelgroup support</li>\n            <li>feat(vm): add delete() to channel objects</li>\n            <li>feat(vm): new clientIPAddress event added</li>\n            <li>enh: store playlist source with the playlist</li>\n            <li>enh(vm): add experimental graphics module for banner generation</li>\n            <li>enh(vm): make connection information work more reliably (idletime, ip etc.)</li>\n            <li>enh(vm): add backend.createChannel() and channel.update()</li>\n            <li>enh: add new calls to get channels / clients to the http api</li>\n            <li>enh(vm): add async support for database calls</li>\n            <li>fix(vm): make unsetGlobal() work properly</li>\n            <li>fix(vm): increase consistency in function names (especially .ID() => .id()); flag old methods as deprecated</li>\n            <li>fix(ts3): interpret channel moves correctly</li>\n            <li>fix(ts3): correctly register channel parents</li>\n            <li>fix: make avatars work properly on windows</li>\n            <li>fix: make servergroups work on first connect of clients for ts3, even if the group is not yet known</li>\n            <li>fix: improve getChannels() of the old api</li>\n            <li>fix: make the clientNick event actually trigger</li>\n            <li>fix: make clientOnlineTime return something useful</li>\n            <li>fix: rename event net#end to net#close to match the docs</li>\n            <li>fix: add moveChannel(parent, order) again</li>\n            <li>fix: remove cpu-usage increase that came with 0.9.16.3</li>\n            <li>fix: documentation...</li>\n        </ul>\n        <h4>0.9.16</h4>\n        <ul>\n            <li>feat(vm): add "net" module for tcp connections</li>\n            <li>feat(vm): add "db" module to access sqlite / mysql databases</li>\n            <li>feat(vm): add semver to scripts; specify required versions as "engine" in manifests to use</li>\n            <li>feat(vm): add privileges to scripts in config.ini</li>\n            <li>enh: add "edit file" privilege and bind to tag editor</li>\n            <li>enh: add "volume" parameter to tts</li>\n            <li>enh: add more fields to tag editor (genre / track# for now)</li>\n            <li>enh(vm): add duration/genre/trackNumber to track object</li>\n            <li>fix: for ios clients, make the url bbcode work so that urls will be recognized</li>\n            <li>fix: make MaxDownloadSize work again</li>\n            <li>fix: don\'t limit avatar filesizes too much (let TS handle it)</li>\n            <li>fix: make drag\'n\'drop move work again</li>\n        </ul>\n        <h4>0.9.15</h4>\n        <ul>\n            <li>feat: publish discord support</li>\n            <li>enh: make search prefer exact matches over fuzzy matches</li>\n            <li>enh: improve speed of the UI on large music collections</li>\n            <li>enh(vm): fix line numbers in script errors</li>\n            <li>enh(vm): many more functions and bugfixes for the new scripting engine</li>\n            <li>fix: repair duration information for tracks downloaded via ytdl</li>\n            <li>fix: minor text changes</li>\n        </ul>\n        <h4>0.9.14</h4>\n        <ul>\n            <li>feat: introducing a new scripting engine!</li>\n            <li>fix: update the "Power-Button" when a bot is shut down (whatever the reason)</li>\n            <li>fix(win): hide youtube-dl window</li>\n        </ul>\n        <h4>0.9.13</h4>\n        <ul>\n            <li>enh: the almost forgotten brother has returned: the windows version is now on par with the linux version</li>\n            <li>enh(win): instead of a console window, show a tray icon - doubleclick opens the interface, right click lets you shut down the bot</li>\n            <li>enh(win): add youtube-dl autodetection so it works out-of-the-box when in the same directory as the bot</li>\n            <li>enh(win): the architecture of the windows version has significantly changed and should work much smoother now for most people</li>\n            <li>fix: remove some possible deadlocks</li>\n            <li>feat: integrate minimal interface to directly download scripts/themes/locales</li>\n            <li>enh: make own themes possible</li>\n            <li>enh: make default theme configurable</li>\n            <li>enh: make themes hideable</li>\n            <li>enh: only load .json for locales, .js for scripts and .css for themes</li>\n            <li>enh: optimize crash detection</li>\n            <li>enh(vm): add checkbox as variable type</li>\n            <li>enh: make drag\'n\'drop only work when bulkmode (upper right button) is enabled on the playlist to prevent accidental moves</li>\n            <li>enh: optimize "realtime" behavior in webinterface</li>\n            <li>enh: update filelist when uploads take place in the background</li>\n        </ul>\n        <h4>0.9.12.3</h4>\n        <ul>\n            <li>enh: the password will now be random when starting for the first time</li>\n            <li>enh: better error messages / help messages</li>\n            <li>fix(ts): honor maxClients in channelCreate / channelUpdate</li>\n            <li>fix: remove old subscribers in subscriber-mode after server restart</li>\n            <li>fix: upgrade doo stuff</li>\n            <li>fix: upgrade discord stuff</li>\n            <li>fix: some other minor bugfixes</li>\n        </ul>\n        <h4>0.9.12.2</h4>\n        <ul>\n            <li>feat(vm): add qyt(url) / queueYT(url)</li>\n            <li>enh: add application/vnd.apple.mpegurl as valid playlist mimeType</li>\n            <li>fix: make -pwreset work again</li>\n        </ul>\n        <h4>0.9.12.1</h4>\n        <ul>\n            <li>feat(vm): saveConfig() will now save changed config values</li>\n            <li>fix: decrease ram/cpu usage for speech recognition</li>\n            <li>fix: update webdav implementation</li>\n            <li>fix: don\'t leak some audio converters</li>\n            <li>fix(vm): make type number actually numeric</li>\n            <li>fix(vm): make channels show up again</li>\n        </ul>\n        <h4>0.9.12</h4>\n        <ul>\n            <li>feat: initial support for project "doo"</li>\n            <li>enh: clarify some error messages</li>\n            <li>enh: optimize buffer usage in new audio handling</li>\n            <li>enh: enlarge some buffers for JSON handling for specific calls</li>\n            <li>enh(vm): add conditions to script settings</li>\n            <li>enh(vm): added new variable types: strings, tracks, array</li>\n            <li>enh(vm): add yt(), ytdl()</li>\n            <li>fix: remove a bug in the playlist interface that could cause a crash</li>\n            <li>fix: make channelUpdate honor the description field</li>\n            <li>fix: remove some bugs from the client library that could cause crashes</li>\n            <li>fix: make trackInfo trigger regardless of announce option</li>\n            <li>fix: always use lowercase on username when logging in</li>\n        </ul>\n        <h4>0.9.11</h4>\n        <ul>\n            <li>feat: initial support for discord</li>\n            <li>feat: add volume and sfx option to tag editor; sfx will always be played "on top" like "sound" vs "music" in the ts3soundboard plugin</li>\n            <li>enh: upgrade to ffmpeg-3.0</li>\n            <li>enh: support for audio filters (compressors and such)</li>\n            <li>enh: less RAM, less CPU</li>\n            <li>enh: optimize dev-console</li>\n            <li>enh: handle tsgroup -1 as guest group</li>\n            <li>enh(ts): add client or invoker object to most callbacks to streamline scripting API, including dbid for ts backend</li>\n            <li>enh(ts): implement ping/pong between client and bot and restart if client stalls</li>\n            <li>enh(ts): make channelUpdate actually trigger</li>\n            <li>enh(vm): add getUser(userid); returns a BOT user</li>\n            <li>enh(vm): enhance error handling</li>\n            <li>enh(vm/ts): add addClientToServerGroup(dbid, servergroupid) / removeClientFromServerGroup(dbid, servergroupid)</li>\n            <li>enh(vm): add getLogLevel / setLogLevel / getInstanceLogLevel / setInstanceLogLevel</li>\n            <li>fix: make the interface work again in IE</li>\n            <li>fix: remove a race condition</li>\n            <li>fix: add support for charsets in playlists</li>\n            <li>fix: remove a memleak</li>\n            <li>fix: disable reconnection tries in some cases (ytdl, tts...)</li>\n            <li>fix: correctly handle new icy stream information formatting</li>\n            <li>fix: make parent in createChannel / updateChannel working when given as string</li>\n            <li>fix: add description to createChannel / updateChannel</li>\n            <li>fix: make scripts work when they\'ve got no vars attribute</li>\n            <li>fix: remove basic auth which was set when not configured</li>\n        </ul>\n        <h4>0.9.10</h4>\n        <ul>\n            <li>feat(vm): add setCurrentPlaylistId / getCurrentPlaylistId / setRepeat / getRepeat / setShuffle / getShuffle</li>\n            <li>fix: make bulk actions on playlists work properly again</li>\n            <li>enh: waste less resources when idle and optimize audiomixer</li>\n            <hr/>\n            <li>feat(vm): add support for script websites</li>\n            <li>feat(vm): add playlists(), playlistGet(uuid), getTrack(uuid), search(searchTerm), getStats(), getGlobalStats(), queueGet(), queueRemove(index), queueClear(), queueAppend(), queuePrepend()</li>\n            <li>fix(vm): rename old getTrack() to getCurrentTrack()</li>\n            <li>enh(vm): implement better error handling for scripts</li>\n            <li>enh(vm): add getBans(), banByClientId(clientId, time, reason), banByDbId(clientId, time, reason), removeBan(banId)</li>\n            <li>fix: avoid clipping when two tracks are playing</li>\n            <li>fix: make avatar upload work again</li>\n            <li>fix(vm): make http post actually post the body</li>\n            <li>fix(vm): rename / reorder some functions</li>\n            <li>enh: use covers from ytdl</li>\n            <hr/>\n            <li>feat: implement crossfading between tracks</li>\n            <li>feat: implement external search plugin interface</li>\n            <li>feat(vm): implement broadcast() and an event to allow cross-instance messaging</li>\n            <li>feat(vm): implement a simple console interface for api/script bridge</li>\n            <li>enh(vm): add getNick(), connect(), disconnect(), getVolume()</li>\n            <li>enh(vm): add setTimeout, setInterval, clearTimeout, clearInterval</li>\n            <li>enh: improve locking to save resources</li>\n            <li>enh: implement ytdl-caching (for streaming)</li>\n            <li>enh: remove c++11 dependencies so that the bot can run on older machines (still unsure if this is an improvement... :/)</li>\n            <li>fix: add support for wave files (finally)</li>\n            <li>fix: honor DataDir setting</li>\n            <li>fix(vm): always emit trackEnd, even when no callback has been set (will be empty in that case)</li>\n        </ul>\n        <h4>0.9.9 and older</h4>\n        <ul>\n            <li>enh(vm): add event http:placeholder that forwards JSON from calls to the HTTP-API; still experimental</li>\n            <li>fix: remove some race conditions in the event handler</li>\n            <li>enh(vm): add getChannel(channelId)</li>\n            <li>enh(vm): add setNick(nickname)</li>\n            <li>fix: use ssl for internal stream handling when the bot is configured to serve via ssl</li>\n            <hr/>\n            <li>feat: add initial support to stream audio to an icecast server</li>\n            <li>enh(vm): add clientUid / clientNick to move-event, when the client disconnects</li>\n            <li>enh(vm): add functions setGlobal/setInstance/getGlobal/getInstance/removeGlobal/removeInstance to scripting</li>\n            <li>enh(vm): add functions getServerUid / getServerName / getServerPlatform / getServerVersion to scripting</li>\n            <li>enh(vm): add getPing function to scripting</li>\n            <li>enh(vm): add getCurrentChannelId to scripting</li>\n            <li>enh(vm): add setDefaultChannel(channelId) to scripting</li>\n            <li>fix: improve handling (skip track) when a playlist entry doesn\'t play correctly</li>\n            <li>fix: disable soundpack of the client</li>\n            <li>enh: migrate sticky-functionality to a script</li>\n            <hr/>\n            <li>feat: speech-recognition</li>\n            <li>enh: optimize software mixer (speedup: 100%)</li>\n            <li>enh: optimize socket usage</li>\n            <li>feat: properly implement an audio return channel</li>\n            <hr/>\n            <li>enh: add \'play folder\' to all music that will keep playing until stop; rollback old behavior of only playing one track when doubleclicking files</li>\n            <li>enh: improve logging and error handling</li>\n            <li>enh(vm): add getChannel() method that returns the current channelId (or null if none)</li>\n            <li>fix(api): return uuid when adding an url</li>\n            <li>fix(aloneMode): don\'t play from the beginning if another person enters the room after aloneMode was active</li>\n            <hr/>\n            <li>feat: add !!stop command to stop and remove the idle track (completely stop)</li>\n            <li>enh: !playlist command will now also match partially (when there is only one result)</li>\n            <hr/>\n            <li>feat: fetch client statistics</li>\n            <li>feat: import playlists via youtube-dl</li>\n            <li>enh: resize images to 300x300 before using them as avatar</li>\n            <li>enh: implement "real" streaming mode for youtube-dl</li>\n            <li>enh: add a button to import radiostations to the all music list</li>\n            <li>enh: resize avatars to 300x300 max.</li>\n            <li>fix: implement some new x functions to support a wider range of environments</li>\n            <hr>\n            <li>fix: webinterface now also honors instance specific privileges and reloads properly</li>\n            <li>fix: clean up some privileges</li>\n            <li>enh(localeedit): add diff-generator and importer to make it easier to collaborate</li>\n            <hr>\n            <li>feat: instance-specific privileges</li>\n            <li>feat: external locales support</li>\n            <li>feat: external style override support</li>\n            <hr>\n            <li>change: next track will be played even on all files / folders (shuffled, though)</li>\n            <li>enh(vm): set password for channels</li>\n            <li>enh(vm): unset(key) now deletes what set(key, val) saved</li>\n            <li>fix: make server changeable again after disconnect</li>\n            <hr>\n            <li>feat(vm): add function getUsers()</li>\n            <li>feat(vm): add function to set avatar from current track</li>\n            <li>feat(vm): add function to reset avatar to default</li>\n            <li>feat(vm): add function to remove avatar</li>\n            <li>enh: move alone-mode to script</li>\n            <li>fix: handle newlines in chat correctly</li>\n            <li>fix: clean-up showcase.js</li>\n            <li>fix(vm): make select-options work again</li>\n            <hr>\n            <li>feat: add initial support for mumble</li>\n            <li>enh: improve webinterface performance</li>\n            <li>enh: reduce memory usage again</li>\n            <li>enh: add more hotkeys to webinterface</li>\n            <li>enh: improve mobile sidebar</li>\n            <li>fix: remove deadlock on bot shutdown</li>\n            <li>fix: improve scripting performance</li>\n            <li>fix: improve seeking behavior from the webinterface (don\'t jump back directly after seeking)</li>\n            <li>fix: display filename when title and artist are not available</li>\n            <li>fix: don\'t speed up audio when framenumbers get weird</li>\n            <li>fix: prevent possible crash when decoder returns garbage</li>\n            <li>fix: add better shutdown handling</li>\n            <hr>\n            <li>feat: introduce scripting / plugins</li>\n            <li>enh: when pressing enter in the search field, open a search on all files instead of the current directory / list</li>\n            <li>fix: update song-title after it has been edited</li>\n            <hr/>\n            <li>feat: add "alone-mode" to save bandwidth and cpu time</li>\n            <li>fix: make non-temporary youtube-dl jobs work under windows</li>\n            <li>fix: make avatars on windows work</li>\n            <hr/>\n            <li>feat: playlist-support for streams (.pls/.m3u)</li>\n            <li>feat: guard against malicious server banners / intervals (hosting only)</li>\n            <li>enh: random playback is now more intelligent and less random</li>\n            <li>enh: be responsive, finally!</li>\n            <li>enh: URL-preflight checks for radio streams</li>\n            <li>enh: improve speed and cpu usage of frontend (reduce angular digest calls)</li>\n            <li>enh: improve behavior on stream-disconnect</li>\n            <li>enh: add latency-reduced webstream mode (still experimental)</li>\n            <li>fix: include filename in searches from !play, !search etc.</li>\n            <li>fix: use the dragged track for drag-n-drop instead of the highlighted one</li>\n            <hr/>\n            <li>feat: avatar upload / removal</li>\n            <li>feat: stream-to-browser (experimental)</li>\n            <li>feat: several new !-commands</li>\n            <li>feat: bind account to a server group</li>\n            <li>feat: queue (with separate privileges to add tracks at the end or beginning of the queue)</li>\n            <li>feat: new whispermode for music-subscriptions</li>\n            <li>feat: add option to make tracks and playlists automatically play on startup or when idle</li>\n            <li>feat(hosting): single-sign-on</li>\n            <li>feat(hosting): add support for multicast</li>\n            <li>enh: don\'t import files from youtube-dl when streaming (but import when using the download-functionality)</li>\n            <li>enh: don\'t add temporary youtube-dl streams to the library anymore</li>\n            <li>enh: some HTTP header-corrections to speed things up and make things more secure</li>\n            <li>enh: added meta-tag to prevent robots from indexing</li>\n            <li>enh: make !yt command temporary, add !ytdl for old behavior</li>\n            <li>fix: hide options in track-dropdown that don\'t exist for the selected track</li>\n            <li>fix: unlock playlists on several operations that caused a deadlock before</li>\n            <li>fix: properly delete files (bulk as well)</li>\n            <li>fix: refresh file list on upload</li>\n            <li>fix: make youtube-dl work on windows</li>\n            <li>fix: no more endless loading when saving settings</li>\n            <li>fix: don\'t crash when playing back empty playlists</li>\n            <li>fix: reconnect streams after timeout</li>\n            <li>fix: many more small bugfixes</li>\n            <hr/>\n            <li>enh: limit download-jobs to 30 and add "clear"-button</li>\n            <li>enh: add more logging</li>\n            <li>feat: purge download-history</li>\n            <li>enh: introduce parameter %i for "announce-string"; will get replaced by the username of the user that requested playback (or the nick of the bot)</li>\n            <li>enh: gzip some content to increase speed over the internets</li>\n            <li>fix: don\'t show the equalizer-icon on folders when streaming urls</li>\n            <li>fix: sleep a bit before jumping to the next track to avoid high-cpu load</li>\n            <li>fix: don\'t reset the ducking volume on restart</li>\n            <li>fix: remove some deadlocks that could result in the bot being not responsive anymore</li>\n            <li>fix: make the playlist to not grow wider than the screen</li>\n            <li>enh: switch internal http-framework to something more lightweight, hoping it won\'t get too bumpy</li>\n            <li>fix: make more than one instance work on windows as well</li>\n            <li>enh: introduce some settings to tweak cpu-usage / latency a bit more (everyone who reads this: BE CAREFUL!)</li>\n            <hr/>\n            <li>enh: replace javascript prompt with shiny modals for new playlists and folders as well as rename folder</li>\n            <li>fix: single-click for the play-icon is back, hooray!</li>\n            <li>fix: give drag\'n\'drop some more love</li>\n            <li>enh: better error messages for downloads</li>\n            <li>enh: changeable announce-string</li>\n            <li>fix: limit nick to 30 characters</li>\n            <li>enh: ducking volume is now configurable</li>\n            <li>enh: volume controls will now work logarithmic instead of linear</li>\n            <li>feat: SSL-Support (use "UseSSL = true" in config.ini; it will generate a new self-signed certificate on the next start)</li>\n            <li>feat: audio-engine now can play several streams at the same time; will be used for:</li>\n            <li>feat: TTS via external provider</li>\n            <li>fix: play-button works now more as expected</li>\n            <li>feat: localization \\o/ - for now english &amp; german</li>\n            <li>enh: completely reworked keyboard controls (press ? on your keyboard to see what\'s possible on each screen)</li>\n            <li>enh: direct drag-and-drop upload to folders and playlists</li>\n            <li>feat: introduce folders</li>\n            <li>fix: privilege "Edit bot"</li>\n            <li>enh: add some anti-spam mechanisms</li>\n            <li>fix: make tag-editor work with the new caching feature</li>\n            <li>enh: save last channel</li>\n            <li>feat: stick-to-channel</li>\n            <li>enh: apply new channel in settings directly</li>\n            <li>feat: apply Channel-Commander</li>\n            <li>feat: ducking</li>\n            <li>enh: improve hosting-api</li>\n            <li>enh: migrate plugin from libev to libuv and remove external dependencies</li>\n            <li>fix: improve audio mixer</li>\n            <li>fix: make sure \'stop\' stops everytime</li>\n            <li>enh: many security &amp; stability fixes</li>\n            <li>enh: speed up loading of playlist when there have been no changes</li>\n            <li>fix: make instances work directly after creation (without reload)</li>\n            <li>feat: hosting-administration</li>\n            <li>fix: make empty playlists deletable</li>\n            <li>feat: fav-icon can now be placed at ./static/favicon.ico</li>\n            <li>feat: make Announcements from Stream-Info work (ICY-foo)</li>\n            <li>fix: better working themes (still not all of \'em) - clear browser cache!</li>\n            <li>fix: some security fixes for youtube-dl (limits)</li>\n            <li>fix: auto-play tracks that bots were playing after graceful shutdown</li>\n            <li>feat: parse icy-tags in streams for temporary artist/title info (might not work all the time)</li>\n            <li>enh: improve performance of interface startup</li>\n            <li>fix: performance improvements by disabling news-bar in TS3 Client</li>\n            <li>fix: performance improvements in decoding</li>\n            <li>fix: save theme selection</li>\n            <li>feat: introducing plugin-system</li>\n            <li>feat: introducing bulk-operations</li>\n            <li>feat: displaying used space and reclaiming space when deleting tracks</li>\n            <li>feat: added "commands"-tab to information page</li>\n            <li>fix: accept more youtube-dl-versions</li>\n            <li>feat: add some commands (!yt, !stream), still highly experimental</li>\n            <li>fix: make the identity-check work for all identities</li>\n            <li>fix: make instances spawnable again</li>\n            <li>feat: add Tag-Editor to tracks context menu</li>\n            <li>feat: add youtube-dl support</li>\n            <li>enh: move files to bot-specific directories</li>\n            <li>fix: change behavior for single-instance bots</li>\n            <li>feat: add radio list (dir.xiph.org)</li>\n            <li>feat: a logout-button - yay!</li>\n            <li>enh: improve security by adding installation-specific signature nonces</li>\n            <li>fix: add full support for utf8</li>\n            <li>fix: make seeking in FireFox work again (and give up on IE for now)</li>\n            <li>fix: improve memory usage and fix some leaking when using FFmpeg</li>\n            <li>...</li>\n        </ul>\n    </div>\n    <div ng-if="tab == \'about\'">\n        <h3>SinusBot <small>{{status.v}}</small></h3>\n        <p>&copy; 2013-2019 Michael Friese. All rights reserved. (<a href="https://www.sinusbot.com">https://www.sinusbot.com</a>)</p>\n        <div class="alert alert-warning">This software is free for personal use only. If you want to use it commercially, please contact the author.</div>\n        <p>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.</p>\n        <p>You may NOT redistribute this software or use this software commercially without prior written permission from the author.</p>\n        <hr/>\n        TeamSpeak 3 is &copy; TeamSpeak Systems GmbH. This product and the author is in no way affiliated with TeamSpeak Systems GmbH.<br/>\n        Discord is &copy; Hammer &amp; Chisel Inc. This product and the author is in no way affiliated with Hammer &amp; Chisel Inc.<br/>\n        <hr/>\n        This software uses code of <a href="http://ffmpeg.org">FFmpeg</a> licensed under the LGPLv2.1 and its source can be downloaded <a href="https://frie.se/ts3bot/ffmpeg.src.tar.gz">here</a>. The author of SinusBot does not own FFmpeg, instead the owners can be found at <a href="http://ffmpeg.org">ffmpeg.org</a>.\n        <hr/>\n        This software uses the great PocketSphinx library. License see below.\n        <hr/>\n        <strong>This software also uses the following great libraries:</strong><br/>\n        Bootstrap, Copyright 2011-2015 Twitter, Inc., licensed under MIT.<br/>\n        AngularJS, Copyright 2010-2014 Google, Inc. (http://angularjs.org), licensed under MIT.<br/>\n        HTTP Auth Interceptor Module for AngularJS, (c) 2012 Witold Szczerba, licensed under MIT.<br/>\n        AngularJS file upload/drop directive with http post and progress, Danial &lt;danial.farid@gmail.com&gt;, licensed under MIT.<br/>\n        angular-hotkeys v1.4.5, Copyright (c) 2014 Wes Cruver, licensed under MIT.<br/>\n        angular-moment.js, (c) 2013, 2014 Uri Shaked, licensed under MIT.<br/>\n        ngProgressLite, (c) 2013 Dmitri Voronianski, licensed under MIT.<br/>\n        State-based routing for AngularJS (http://angular-ui.github.com/), licensed under MIT.<br/>\n        angular-strap, Olivier Louvignes (olivier@mg-crea.com), licensed under MIT.<br/>\n        jQuery, (c) 2005, 2014 jQuery Foundation, Inc., licensed under MIT.<br/>\n        moment.js, Tim Wood, Iskren Chernev, Moment.js contributors, licensed under MIT.<br/>\n        Lo-Dash, Copyright 2012-2013 <a href="http://dojofoundation.org">The Dojo Foundation</a>, licensed under MIT.<br/>\n        Themes from <a href="http://bootswatch.com">bootswatch.com</a>, licensed under MIT.<br/>\n        marked - a markdown parser, Copyright (c) 2011-2014, Christopher Jeffrey, licensed under MIT.<br/>\n        ngInfiniteScroll, Copyright (c) 2012 Brandon Tilley, licensed under MIT.<br/>\n        sprintf-js by Alexandru Marasteanu &lt;hello@alexei.ro&gt; (http://alexei.ro/), licensed under BSD-3-Clause<br/>\n        Go-MySQL-Driver, licensed under MPL 2.0<br/>\n        go-sqlite3, Copyright (C) 2014 Yasuhiro Matsumoto, licensed under MIT.<br/>\n        sqlx, Copyright (c) 2013, Jason Moiron, licensed under MIT.<br/>\n        nfnt, Copyright (c) 2012, Jan Schlicht, licensed under MIT.<br/>\n        snappy, Copyright (c) 2011 The Snappy-Go Authors, licensed under MIT.<br/>\n        Gorilla Websocket, Copyright (c) 2013 The Gorilla WebSocket Authors, licensed under MIT.<br/>\n        lib/pq Copyright (c) 2011-2013, \'pq\' Contributors Portions Copyright (C) 2011 Blake Mizerany, licensed under MIT.<br/>\n        JavaScript helper objects (console), Copyright (c) 2018 David Kartnaller, licensed under MIT.<br/>\n        <hr/>\n        <strong>The author wishes to thank the following people for their support:</strong><br/>\n        Jenny Broekmann, Stefan Haacker, the TeamSpeak team for delivering a software that has kept friends in contact for such a long time, the FFmpeg team, Ronny Holland\n        <hr/>\n        <strong>Special thanks to the beta testers for their patience and suggestions:</strong><br/>\n        Manuel Hettche, Julian \'Xuxe\' HÃ¼benthal, Patrik Kernstock, Max Schmitt, Jonas BÃ¶gle, David Kartnaller, Nico Erler, Diesmon, Thomas GrÃ¶mer, Raphael \'Raphraph\' Touet, Andy Savelsberg, Nico Rausch, Mikhail Baker, MrJoki007, Marc Maurer\n        <hr/>\n        <pre>\nThe MIT License (MIT)\n\nCopyright (C) by the owners (see above).\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.</pre>\n        <hr/>\n        For PocketSphinx/SphinxBase:\n        <pre>\nCopyright (c) 1999-2015 Carnegie Mellon University.  All rights\nreserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in\n   the documentation and/or other materials provided with the\n   distribution.\n\nThis work was supported in part by funding from the Defense Advanced\nResearch Projects Agency and the National Science Foundation of the\nUnited States of America, and the CMU Sphinx Speech Consortium.\n\nTHIS SOFTWARE IS PROVIDED BY CARNEGIE MELLON UNIVERSITY ``AS IS\'\' AND\nANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY\nNOR ITS EMPLOYEES BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n        </pre>\n        <hr/>\n        For v8 JavaScript Engine:\n        <pre>\nCopyright 2014, the V8 project authors. All rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\n      copyright notice, this list of conditions and the following\n      disclaimer in the documentation and/or other materials provided\n      with the distribution.\n    * Neither the name of Google Inc. nor the names of its\n      contributors may be used to endorse or promote products derived\n      from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n        </pre>\n        <hr/>\n        For TTS Helper / Runtime, from the Chromium Project:\n        <pre>\n            Copyright 2015 The Chromium Authors. All rights reserved.\n\n            Redistribution and use in source and binary forms, with or without\n            modification, are permitted provided that the following conditions are\n            met:\n\n               * Redistributions of source code must retain the above copyright\n            notice, this list of conditions and the following disclaimer.\n               * Redistributions in binary form must reproduce the above\n            copyright notice, this list of conditions and the following disclaimer\n            in the documentation and/or other materials provided with the\n            distribution.\n               * Neither the name of Google Inc. nor the names of its\n            contributors may be used to endorse or promote products derived from\n            this software without specific prior written permission.\n\n            THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n            "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n            LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n            A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n            OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n            SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n            LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n            DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n            THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n            (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n            OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n        </pre>\n    </div>\n</div>\n')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.instances.new.tpl.html", '<form ng-submit="createInstance()" ng-controller="settings.instances.new">\n\t<div class="modal-body">\n\t\t<div class="alert alert-danger" ng-if="error">{{error}}</div>\n\t\t<div class="form-group" ng-if="showBackends">\n\t\t\t<label for="name">{{\'Backend\'|t}}</label>\n\t\t\t<select class="form-control" ng-model="instance.backend" ng-options="be.val as be.name for be in backends">\n\t\t\t</select>\n\t\t</div>\n\t\t<div class="form-group">\n\t\t\t<label for="name">{{\'Nickname\'|t}}</label>\n\t\t\t<input type="text" class="form-control" id="name" placeholder="Spaceman" ng-model="instance.nick" autofocus/>\n\t\t</div>\n\t\t<div class="form-group" ng-if="instance.backend == \'discord\'">\n\t\t\t<label for="token">{{\'Bot-Token\'|t}}</label>\n\t\t\t<input type="text" class="form-control" id="token" placeholder="" ng-model="instance.token"/>\n\t\t\t<small>You can generate a new bot account <a href="https://discordapp.com/developers/applications/me" target="_blank">here</a> to get a client-id and a token.</small>\n\t\t</div>\n\t\t\x3c!--<div class="form-group" ng-if="instance.backend == \'discord\' && instance.token && instance.clientId">\n\t\t\tBefore you continue, make sure that <a ng-href="https://discordapp.com/oauth2/authorize?client_id={{instance.clientId}}&scope=bot&permissions=0">to allow the bot to join your server</a>.\n\t\t</div>--\x3e\n\t</div>\n\t<div class="modal-footer">\n\t    <button type="button" class="btn btn-default" ng-click="$hide()">{{\'Cancel\'|t}}</button>\n\t    <button type="submit" class="btn btn-primary">{{\'Create\'|t}}</button>\n\t</div>\n</form>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.instances.tpl.html", '<div class="col-md-10 col-md-offset-2">\n    <div class="row">\n        <div class="col-md-8">\n            <button class="btn btn-sm btn-primary pull-right" ng-click="addInstance()"><i class="glyphicon glyphicon-plus"></i> {{\'Add Instance\'|t}}</button>\n            <h2 class="firstheader">{{\'Instances\'|t}}</h2>\n            <div class="alert alert-info" ng-if="uiConfig.search">{{::\'Results for\'|t}} <strong>{{uiConfig.search}}</strong></div>\n            <table class="table table-hover table-striped tracklist">\n                <tbody>\n                    <tr ng-repeat="instance in instances | filter:uiConfig.search | orderBy:[\'pinned\',\'name\',\'nick\',\'uuid\']" ng-class="{\'warning\': isActive(instance)}" style="cursor: pointer" ng-click="activateInstance(instance)">\n                        <td><i class="glyphicon glyphicon-pushpin" style="margin-right: 5px;" ng-class="{\'pin-checked\': instance.pinned === 0, \'pin-unchecked\': instance.pinned == 1}" title="Pin" ng-click="togglePin(instance)"></i><i class="glyphicon glyphicon-star-empty" ng-if="instance.licenseId" style="margin-right: 5px;"></i><span title="{{instance.uuid}}">{{instance.name || instance.nick}}</span> <small ng-if="instance.licenseId">({{instance.licenseId}})</small></td>\n                        <td><div ng-if="instance.backend != \'discord\'">{{instance.serverHost}}:{{instance.serverPort}}</div><div ng-if="instance.backend == \'discord\'">Discord</div></td>\n                        <td style="text-align: right;">\n                            <button class="btn btn-xs" ng-class="{\'btn-primary\': isActive(instance)}" ng-click="activateInstance(instance)">{{\'Select\'|t}}</button>\n                            <button title="{{\'Start / stop Bot\'|t}}" ng-click="toggleInstance(instance)" class="btn btn-xs" ng-class="{\'btn-danger\': !instance.running, \'btn-success\': instance.running}" bs-tooltip><i class="glyphicon glyphicon-off"></i></button>\n                            <button ng-if="!instance.licenseId && !instance.mainInstance" title="{{\'Delete\'|t}}" ng-if="!instance.mainInstance" ng-click="deleteInstance(instance)" class="btn btn-warning btn-xs" bs-tooltip><i class="glyphicon glyphicon-remove"></i></button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class="col-md-4">\n            <h3 class="firstheader">{{\'Help\'|t}}</h3>\n            <p>{{\'Each instance represents a bot that can connect to your server. All instance share the same users with their privileges and files.\'|t}}</p>\n            <p>{{\'To create a new instance, click the corresponding button and enter a new nick-name. Afterwards select the newly created bot (selected instances are indicated by a yellowish background) and go to General Settings to enter the credentials for the new instance. Then you can launch the new instance.\'|t}}</p>\n            <p>{{\'If you have only one instance, it is selected by default.\'|t}}</p>\n        </div>\n    </div>\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.log.tpl.html", '<div class="col-md-10 col-md-offset-2">\n\t<h2 class="firstheader">{{type|t}}-Log</h2>\n\t<div class="alert alert-info" ng-if="uiConfig.search">{{::\'Results for\'|t}} <strong>{{uiConfig.search}}</strong></div>\n\t<div style="padding: 9px 14px; margin-bottom: 14px; background-color: #f7f7f9; border: 1px solid #e1e1e8; border-radius: 4px;">\n\t\t<div ng-repeat="entry in log | filter:uiConfig.search track by $index" ng-if="entry.t != 0" ng-class="\'sev\' + entry.s">{{entry.t * 1000 | amDateFormat}} {{entry.m}}</div>\n\t</div>\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.personal.tpl.html", '<div class="col-md-10 col-md-offset-2">\n    <div class="alert alert-danger" ng-if="error">{{error}}</div>\n    <div class="row" ng-if="!error">\n        <div class="col-md-6">\n            <h2 class="firstheader">{{\'Personal Settings\'|t}}</h2>\n            <form role="form">\n                <div class="form-group">\n                    <label for="defaultChannel">{{\'Theme\'|t}}</label>\n                    <select class="form-control" ng-change="setTheme(theme)" ng-model="theme" ng-options="l as l.name for l in themes | orderBy:\'name\'">\n                        \x3c!--<option value="cerulean">Cerulean</option>\n                        <option value="cosmo">Cosmo</option>\n                        <option value="cyborg">Cyborg</option>\n                        <option value="darkly">Darkly</option>\n                        <option value="flatly">Flatly</option>\n                        <option value="journal">Journal</option>\n                        <option value="lumen">Lumen</option>\n                        <option value="paper">Paper</option>\n                        <option value="readable">Readable</option>\n                        <option value="sandstone">Sandstone</option>\n                        <option value="simplex">Simplex</option>\n                        <option value="slate">Slate</option>\n                        <option value="spacelab">Spacelab</option>\n                        <option value="superhero">Superhero</option>\n                        <option value="united">United</option>\n                        <option value="yeti">Yeti</option>--\x3e\n                    </select>\n                </div>\n                <div class="form-group">\n                    <label for="defaultChannel">{{\'Language\'|t}} (<a ui-sref="app.tools.localeedit">{{\'edit\'|t}}</a>)</label>\n                    <select class="form-control" ng-change="setLanguage(language)" ng-model="language" ng-options="l.code as l.name for l in locales">\n                        <option value="en-US">English</option>\n                        \x3c!-- <option value="de-DE">German</option> --\x3e\n                    </select>\n                </div>\n            </form>\n        </div>\n        <div class="col-md-6">\n        </div>\n    </div>\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.rules.addaction.tpl.html", '<form ng-submit="addAction(editAction)" ng-controller="settings.rules.addaction">\n    <div class="modal-body">\n        <div class="alert alert-danger" ng-if="error">{{error}}</div>\n        <div class="form-group">\n            <label for="ruleevent">{{\'Action\'|t}}</label>\n            <select id="ruleevent" ng-model="editAction.action" class="form-control" ng-options="action.id as action.name | t for action in actions">\n                <option value="">-- {{\'none\'|t}}</option>\n            </select>\n        </div>\n        <div ng-repeat="actionParams in actionById[editAction.action].params">\n            <div class="form-group">\n                <label for="ruleaction_{{actionParams.field}}">{{actionParams.label|t}}</label>\n                <input id="ruleaction_{{actionParams.field}}" type="text" class="form-control" ng-model="editAction.paramValues[actionParams.field]"/>\n            </div>\n        </div>\n    </div>\n    <div class="modal-footer">\n        <button type="button" class="btn btn-default" ng-click="$hide()">{{\'Cancel\'|t}}</button>\n        <button type="submit" class="btn btn-primary">{{\'Add\'|t}}</button>\n    </div>\n</form>\n')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.rules.new.tpl.html", '<form ng-submit="createRule(current)" ng-controller="settings.rules.new">\n    <div class="modal-body">\n        <div class="alert alert-danger" ng-if="error">{{error}}</div>\n        <div class="form-group">\n            <label for="rulename">{{\'Name\'|t}}</label>\n            <input id="rulename" ng-model="current.name" class="form-control" autofocus/>\n        </div>\n        <div class="form-group">\n            <label for="ruleevent">{{\'Event\'|t}}</label>\n            <select id="ruleevent" ng-model="current.event" class="form-control" ng-options="event.id as event.name | t for event in events">\n                <option value="">-- {{\'none\'|t}}</option>\n            </select>\n        </div>\n        <div ng-repeat="eventParams in eventById[current.event].params">\n            <div class="form-group">\n                <label for="ruleevent_{{eventParams.field}}">\n                    <input id="ruleevent_{{eventParams.field}}" type="checkbox" ng-model="current.paramFilters[eventParams.field]" value="1"/> {{eventParams.label|t}}\n                </label>\n            </div>\n            <div class="form-group" ng-if="current.paramFilters[eventParams.field]">\n                <input type="text" class="form-control" ng-model="current.paramValues[eventParams.field]"/>\n            </div>\n        </div>\n    </div>\n    <div class="modal-footer">\n        <button type="button" class="btn btn-default" ng-click="$hide()">{{\'Cancel\'|t}}</button>\n        <button type="submit" class="btn btn-primary">{{\'Add\'|t}}</button>\n    </div>\n</form>\n')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.rules.tpl.html", '<div class="col-md-12 gutter">\n\t<button class="btn btn-sm btn-primary pull-right" ng-click="addRule()"><i class="glyphicon glyphicon-plus"></i> {{\'Add Rule\'|t}}</button>\n\t<h2 class="firstheader">{{\'Rules\'|t}}</h2>\n\t<table class="table" style="table-layout: fixed">\n\t\t<thead>\n\t\t\t<th style="width: 20%">{{\'Name\'|t}}</th>\n\t\t\t<th>{{\'Event\'|t}}</th>\n\t\t\t<th>{{\'Actions\'|t}}</th>\n\t\t\t<th style="width: 40px"></th>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<tr ng-repeat="rule in rules" ng-click="editRule(rule)">\n\t\t\t\t<td>{{rule.name}}</td>\n\t\t\t\t<td>{{eventById[rule.type].name|t}}<br/><span ng-repeat="(paramName, paramValue) in rule.filters"><span style="font-size: 0.8em"><strong>{{paramName}}</strong> {{paramValue}}&nbsp;&nbsp;</span></span></td>\n\t\t\t\t<td>\n\t\t\t\t\t<div ng-repeat="action in rule.actions" class="clearfix" style="margin-bottom: 8px;">\n\t\t\t\t\t\t<div style="display: inline-block; float: left; margin-right: 8px; font-size: 2.0em">{{$index+1}}</div>\n\t\t\t\t\t\t{{actionById[action.type].name|t}}<br/>\n\t\t\t\t\t\t<span ng-repeat="(paramName, paramValue) in action.params"><span style="font-size: 0.8em"><strong>{{paramName}}</strong> {{paramValue}}&nbsp;&nbsp;</span></span>\n\t\t\t\t\t</div>\n\t\t\t\t</td>\n\t\t\t\t<td style="text-align: right"><button title="{{\'Delete\'|t}}" ng-click="deleteRule(rule)" class="btn btn-warning btn-xs" bs-tooltip><i class="glyphicon glyphicon-remove"></i></button></td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.scripts.params.tpl.html", "<div class=\"form-group\" ng-class=\"{'has-error': var.type == 'track' && (!settings[var.name] || !settings[var.name].url), 'has-success': var.type == 'track' && (settings[var.name] && settings[var.name].url)}\" ng-hide=\"var.conditions && !conditionsTrue(var.conditions, settings)\" ng-style=\"{'margin-left': ((var.indent || 0) * 10) + 'px'}\">\n" + '    <input ng-if="var.type == \'checkbox\'" type="checkbox" class="forminput" style="margin-right: 5px;" ng-model="settings[var.name]" value="1" id="f_{{$index}}_{{var.name}}"/>\n    <label>{{var.title|t}}</label>\n    <input ng-if="var.type == \'string\'" ng-model="settings[var.name]" type="text" class="form-control" id="f_{{$index}}_{{var.name}}" placeholder="{{var.placeholder|t}}"/>\n    <input ng-if="var.type == \'password\'" type="password" ng-model="settings[var.name]" type="text" class="form-control" id="f_{{$index}}_{{var.name}}" placeholder="{{var.placeholder|t}}"/>\n    <ui-select ng-if="var.type == \'track\'" ng-model="settings[var.name]">\n        <ui-select-match class="ui-select-match" placeholder="{{\'Select a track\'|t}}">\n            <span ng-bind="$select.selected.title"></span>\n        </ui-select-match>\n        <ui-select-choices class="ui-select-choices" repeat="track in (files | filter: $select.search | limitTo: 30) track by track.url">\n            <span ng-bind="track.title"></span>\n        </ui-select-choices>\n    </ui-select>\n    <ui-select multiple ng-if="var.type == \'tracks\'" ng-model="settings[var.name]">\n        <ui-select-match class="ui-select-match" placeholder="{{\'Select tracks\'|t}}">\n            <span ng-bind="$item.title"></span>\n        </ui-select-match>\n        <ui-select-choices class="ui-select-choices" repeat="track in (files | filter: $select.search | limitTo: 30) track by track.url">\n            <span ng-bind="track.title"></span>\n        </ui-select-choices>\n    </ui-select>\n    <ui-select ng-if="var.type == \'strings\'" multiple tagging ng-model="settings[var.name]" tagging-label="">\n        <ui-select-match class="ui-select-match" placeholder="{{var.placeholder|t}}">{{$item}}</ui-select-match>\n        <ui-select-choices class="ui-select-choices" repeat="c in (settings[var.name] || [])">{{c}}</ui-select-choices>\n    </ui-select>\n    <input ng-if="var.type == \'number\'" ng-model="settings[var.name]" type="number" class="form-control" id="f_{{$index}}_{{var.name}}" placeholder="{{var.placeholder|t}}"/>\n    <select ng-if="var.type == \'select\'" ng-model="settings[var.name]" class="form-control" id="f_{{$index}}_{{var.name}}" ng-options="(idx | number) as val for (idx, val) in var.options"></select>\n    <textarea ng-if="var.type == \'multiline\'" ng-model="settings[var.name]" class="form-control" id="f_{{$index}}_{{var.name}}" rows="6" placeholder="{{var.placeholder|t}}"></textarea>\n    <input ng-if="var.type == \'channel\' && !channelsFound" type="text" class="form-control" ng-model="settings[var.name]" placeholder="{{var.placeholder|t}}"/>\n    <select ng-if="var.type == \'channel\' && channelsFound" ng-model="settings[var.name]" class="form-control" ng-options="channel.id as channel.display for channel in channels | orderBy:\'sort\'">\n        <option value="">-- {{\'none\'|t}}</option>\n    </select>\n    <div ng-if="var.type == \'array\'">\n        <div ng-repeat="entryx in (settings[var.name] || []) track by $index" style="padding-left: 30px; position: relative">\n            <div style="position: absolute; top: 0; bottom: 0; left: 0; background-color: #888; color: #fff; padding: 2px;"><i class="glyphicon glyphicon-remove" ng-click="settings[var.name].splice(settings[var.name].indexOf(entryx), 1)"></i></div>\n            <div ng-repeat="varx in var.vars" script-params var="varx" settings="entryx" files="files" channels="channels" channels-found="channelsFound" conditions-true="conditionsTrue"></div>\n        </div>\n        <button type="button" class="btn btn-xs" ng-click="settings[var.name] = settings[var.name] || []; settings[var.name].push({});">Add</button>\n    </div>\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.scripts.tpl.html", '<div class="col-md-10 col-md-offset-2">\n    <div class="alert alert-danger" ng-if="error">{{error}}</div>\n    <div class="row">\n        <div class="col-md-12">\n            <h2 class="firstheader">{{\'Scripts\'|t}}</h2>\n            <form role="form" ng-submit="save()">\n                <div ng-repeat="(scriptName, script) in scripts" ng-init="settings[scriptName] = settings[scriptName] || { enabled: false, settings: {} }">\n                    <h4 ng-if="script.enableWeb" style="margin-bottom: 3px; margin-top: 0;"><input id="s_{{$index}}" type="checkbox" ng-model="settings[scriptName].enabled" value="1" style="margin-right: 6px;" ng-hide="script.autorun"/> <i style="font-size: 0.8em; margin-right: 8px;" class="glyphicon" ng-click="display[scriptName] = !display[scriptName]" ng-class="{\'glyphicon-chevron-down\': display[scriptName], \'glyphicon-chevron-right\': !display[scriptName]}"></i><label style="font-weight: inherit; margin-bottom: 0" for="s_{{$index}}"><a target="_top" href="/scripts/{{scriptName}}/">{{script.name|t}}</a></label> <small>{{script.version}} by {{script.author}} ({{scriptName}})</small></h4>\n                    <h4 ng-if="!script.enableWeb" style="margin-bottom: 3px; margin-top: 0;"><input id="s_{{$index}}" type="checkbox" ng-model="settings[scriptName].enabled" value="1" style="margin-right: 6px;" ng-hide="script.autorun"/> <i style="font-size: 0.8em; margin-right: 8px;" class="glyphicon" ng-click="display[scriptName] = !display[scriptName]" ng-class="{\'glyphicon-chevron-down\': display[scriptName], \'glyphicon-chevron-right\': !display[scriptName]}"></i><label style="font-weight: inherit; margin-bottom: 0" for="s_{{$index}}">{{script.name|t}}</label> <small>{{script.version}} by {{script.author}} ({{scriptName}}) - {{settings[scriptName].status}}</small></h4>\n                    <div style="margin-left: 25px">\n                        <span ng-repeat="module in script.requiredModules" class="badge">{{module}}</span>\n                        <small>{{script.description|t}}</small>\n                        <div class="row" style="margin-bottom: 15px; margin-top: 5px;">\n                            <div class="col-md-6">\n                                <div ng-hide="!display[scriptName]">\n                                    <div ng-repeat="varInfo in script.vars track by varInfo.name" script-params settings="settings[scriptName].settings" var="varInfo" files="files" channels="channels" channels-found="channelsFound" conditions-true="conditionsTrue">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button class="btn btn-primary btn-sm" type="submit" style="margin-top: 5px">{{\'Save changes\'|t}}</button>\n                <a ng-if="hasFeature(userInfo, FEATURE_STORE)" class="btn btn-default btn-sm" style="margin-top: 5px" href="/settings/store">More...</a>\n            </form>\n        </div>\n    </div>\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.store.tpl.html", '<div class="col-md-10 col-md-offset-2">\n    <div class="alert alert-danger" ng-if="error">{{error}}</div>\n    <div class="row">\n        <div class="col-md-12">\n            <h2 class="firstheader">{{\'Download Addons\'|t}}</h2>\n            <div class="alert alert-info">{{\'Warning: Addons (especially scripts) are third party content that comes (like the bot itself) without any warranty and may cause increased CPU, RAM and/or bandwidth usage, show unintended behavior, crash your server or make it vulnerable. If you need any help, click the Info-button and contact the author directly as the SinusBot-Staff won\\\'t be able to help you.\'|t}}</div>\n            <ul class="nav nav-tabs">\n                <li role="presentation" ng-class="{\'active\': filter == \'script\'}"><a href ng-click="setFilter(\'script\')">{{\'Scripts\'|t}}</a></li>\n                <li role="presentation" ng-class="{\'active\': filter == \'theme\'}"><a href ng-click="setFilter(\'theme\')">{{\'Themes\'|t}}</a></li>\n                <li role="presentation" ng-class="{\'active\': filter == \'locale\'}"><a href ng-click="setFilter(\'locale\')">{{\'Locales\'|t}}</a></li>\n            </ul> \n            <div ng-repeat="script in scripts | filter:{ type: filter }">\n                <div ng-if="!versionLookup[script.id]" style="float: right" class="btn btn-xs btn-primary" ng-click="download(script.id, script.versionId)">Download</div>\n                <div ng-if="versionLookup[script.id] && (versionLookup[script.id].date != script.lastupdate)" style="float: right" class="btn btn-xs btn-primary" ng-click="download(script.id, script.versionId)">Update</div>\n                <a style="float: right; margin-right: 3px;" class="btn btn-xs btn-default" target="_blank" href="https://forum.sinusbot.com/resources/info.{{script.id}}">Info</a>\n                <div ng-if="script.img" ng-style="{\'background-image\': \'url(https://forum.sinusbot.com/\' + script.img + \')\'}" style="float: left; margin-right: 15px; height: 32px; width: 32px; background-repeat: no-repeat; background-position: 50% 50%; background-size: contain;"></div>\n                <h4 style="margin-bottom: 3px;">{{script.title|t}} <small>{{script.version}} by {{script.author}}, {{script.downloads}} downloads<span ng-if="versionLookup[script.id] && versionLookup[script.id].modified">, <strong>{{\'modified\'|t}}!</strong></span></small></h4>\n                <div style="margin-left: 25px">\n                    <small>{{script.description|t}}</small>\n                </div>\n            </div>\n            <div style="font-size: 11px; padding-top: 25px;">{{\'This is only a selection of addons that are available for the SinusBot. You might want to check the resources section of the forums to find more.\'|t}}</div>\n        </div>\n    </div>\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.tpl.html", '<div class="container-fluid">\n    <div class="row">\n        <div class="col-md-2 sidebar" ng-class="{visible: leftMenu}">\n            <div>\n                <ul class="nav nav-pills nav-stacked">\n                    <li ui-sref-active="active"><a ui-sref="app.settings.personal">{{\'Personal Settings\'|t}}</a></li>\n                    <li ng-if="hasPriv(userInfo, PRIV_EDITBOT)" ui-sref-active="active"><a ui-sref="app.settings.general">{{\'Instance Settings\'|t}}</a></li>\n                    <li ng-if="hasPriv(userInfo, PRIV_EDITINSTANCE)" ui-sref-active="active"><a ui-sref="app.settings.instances">{{\'Instances\'|t}}</a></li>\n                    <li ng-if="hasPriv(userInfo, PRIV_EDITUSERS)" ui-sref-active="active"><a ui-sref="app.settings.users">{{\'User Accounts\'|t}}</a></li>\n                    \x3c!-- <li ui-sref-active="active"><a ui-sref="settings.debug">Debug Console</a></li> --\x3e\n                    <li ng-if="hasPriv(userInfo, PRIV_EDITBOT)" ui-sref-active="active"><a ui-sref="app.settings.botlog">{{\'Bot Log\'|t}}</a></li>\n                    <li ng-if="hasPriv(userInfo, PRIV_EDITBOT)" ui-sref-active="active"><a ui-sref="app.settings.log">{{\'Instance Log\'|t}}</a></li>\n                    <li ng-if="hasPriv(userInfo, PRIV_EDITBOT)" ui-sref-active="active"><a ui-sref="app.settings.scripts">{{\'Scripts\'|t}}</a></li>\n                    <li ng-if="hasPriv(userInfo, PRIV_EDITBOT) && hasFeature(userInfo, FEATURE_STORE)" ui-sref-active="active"><a ui-sref="app.settings.store">{{\'Addons\'|t}}</a></li>\n                    <li ui-sref-active="active"><a ui-sref="app.settings.info">{{\'Info\'|t}}</a></li>\n                </ul>\n            </div>\n        </div>\n        <div class="gutter" ui-view></div>\n    </div>\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.users.edit.tpl.html", '<form ng-submit="save()">\n\t<div class="modal-body">\n\t\t<div class="alert alert-danger" ng-if="error">{{error}}</div>\n\t\t<div class="form-group">\n\t\t\t<label for="password">{{\'Username\'|t}}</label>\n\t\t\t<div>{{user.username}}</div>\n\t\t</div>\n\t\t<div class="form-group">\n\t\t\t<label for="password">{{\'Password\'|t}}</label>\n\t\t\t<input type="password" class="form-control" id="password" placeholder="r3m3mb3rM3" ng-model="user.password"/>\n\t\t</div>\n\t\t<div class="form-group has-feedback" ng-class="{\'has-warning\': user.password != \'\' && user.password != user.password2}">\n\t\t\t<label for="password2">{{\'Repeat Password\'|t}}</label>\n\t\t\t<input type="password" class="form-control" id="password2" placeholder="r3m3mb3rM3" ng-model="user.password2"/>\n\t\t\t<span ng-if="user.password != \'\' && user.password != user.password2" class="glyphicon glyphicon-warning-sign form-control-feedback" aria-hidden="true"></span>\n\t\t</div>\n\t\t<h3>{{\'Identity\'|t}}</h3>\n\t\t<div class="alert alert-info">{{\'You can bind this account to an TS-identity, so you can use the bot commands from within TS itself. The bot and the user must be online at the same time for you to be able to select the identity.\'|t}}</div>\n\t\t<div class="form-group">\n\t\t\t<label for="password">{{\'Currently bound identity\'|t}}</label>\n\t\t\t<div>{{user.tsuid || \'None\'}}</div>\n\t\t</div>\n\t\t<div class="form-group">\n\t\t\t<label for="password">{{\'Bind to another identity\'|t}}</label>\n\t\t\t<select ng-if="clientlist" class="form-control" ng-options="client.uid as client.nick for client in clientlist" ng-model="user.tsuidnew">\n\t\t\t\t<option value="">-- {{\'don\\\'t change\'|t}}</option>\n\t\t\t\t\x3c!-- <option value="##del">-- {{\'delete\'|t}}</option> --\x3e\n\t\t\t</select>\n\t\t\t<input class="form-control" ng-if="!clientlist" ng-model="user.tsuidnew"></input>\n\t\t</div>\n\t\t<h3>{{\'Servergroup\'|t}}</h3>\n\t\t<div class="alert alert-info">{{\'You can also bind this account to a whole servergroup. This is useful for guests or servers with a large user base.\'|t}}</div>\n\t\t<div class="form-group">\n\t\t\t<label for="tsgid">{{\'Servergroup-ID\'|t}}</label>\n\t\t\t<input type="text" class="form-control" id="tsgid" placeholder="1" ng-model="user.tsgid"/>\n\t\t</div>\n\t</div>\n\t<div class="modal-footer">\n\t    <button type="button" class="btn btn-default" ng-click="$hide()">{{\'Cancel\'|t}}</button>\n\t    <button type="submit" class="btn btn-primary">{{\'Save changes\'|t}}</button>\n\t</div>\n</form>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.users.new.tpl.html", '<form ng-submit="createUser()" ng-controller="settings.users.new">\n\t<div class="modal-body">\n\t\t<div class="alert alert-danger" ng-if="error">{{error}}</div>\n\t\t<div class="form-group">\n\t\t\t<label for="username">{{\'Username / eMail\'|t}}</label>\n\t\t\t<input type="text" class="form-control" id="username" placeholder="mr.soundboard@sinusbot.com" ng-model="user.username" autofocus/>\n\t\t</div>\n\t\t<div class="form-group">\n\t\t\t<label for="password">{{\'Password\'|t}}</label>\n\t\t\t<input type="password" class="form-control" id="password" autocomplete="off" placeholder="r3m3mb3rM3" ng-model="user.password"/>\n\t\t</div>\n\t\t<div class="form-group has-feedback" ng-class="{\'has-warning\': user.password != \'\' && user.password != password2}">\n\t\t\t<label for="password2">{{\'Repeat Password\'|t}}</label>\n\t\t\t<input type="password" class="form-control" id="password2" autocomplete="off" placeholder="r3m3mb3rM3" ng-model="password2"/>\n\t\t\t<span ng-if="user.password != \'\' && user.password != password2" class="glyphicon glyphicon-warning-sign form-control-feedback" aria-hidden="true"></span>\n\t\t</div>\n\t\t<div class="form-group">\n\t\t\t<label for="password">{{\'Identity\'|t}}</label>\n\t\t\t<select class="form-control" ng-options="client.uid as client.nick for client in clientlist" ng-model="user.tsuid">\n\t\t\t\t<option value="">-- {{\'not online / no identity\'|t}}</option>\n\t\t\t</select>\n\t\t</div>\n\x3c!-- \t\t<div class="form-group">\n\t\t\t<label for="password">{{\'Privileges\'|t}}</label>\n\t\t\t<div>\n                    <button type="button" title="Login" class="btn btn-xs" ng-class="{\'btn-info\': hasPriv(user, PRIV_LOGIN)}" ng-click="togglePriv(user, PRIV_LOGIN)"><i class="glyphicon glyphicon-eye-open"></i></button>\n                    <button type="button" title="Play music" class="btn btn-xs" ng-class="{\'btn-info\': hasPriv(user, PRIV_PLAYBACK)}" ng-click="togglePriv(user, PRIV_PLAYBACK)"><i class="glyphicon glyphicon-music"></i></button>\n                    <button type="button" title="Upload music" class="btn btn-xs" ng-class="{\'btn-info\': hasPriv(user, PRIV_UPLOAD_FILE)}" ng-click="togglePriv(user, PRIV_UPLOAD_FILE)"><i class="glyphicon glyphicon-cloud-upload"></i></button>\n                    <button type="button" title="Edit users" class="btn btn-xs" ng-class="{\'btn-info\': hasPriv(user, PRIV_EDITUSERS)}" ng-click="togglePriv(user, PRIV_EDITUSERS)"><i class="glyphicon glyphicon-user"></i></button>\n                    <button type="button" title="Start/Shutdown bot" class="btn btn-xs" ng-class="{\'btn-info\': hasPriv(user, PRIV_STARTSTOP)}" ng-click="togglePriv(user, PRIV_STARTSTOP)"><i class="glyphicon glyphicon-off"></i></button>\n                    <button type="button" title="Configure Bot" class="btn btn-xs" ng-class="{\'btn-info\': hasPriv(user, PRIV_EDITBOT)}" ng-click="togglePriv(user, PRIV_EDITBOT)"><i class="glyphicon glyphicon-cog"></i></button>\n\t\t\t</div>\n\t\t</div> --\x3e\n\t</div>\n\t<div class="modal-footer">\n\t    <button type="button" class="btn btn-default" ng-click="$hide()">{{\'Cancel\'|t}}</button>\n\t    <button type="submit" class="btn btn-primary">{{\'Add\'|t}}</button>\n\t</div>\n</form>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.users.tpl.html", '<div class="col-md-10 col-md-offset-2">\n    <button class="btn btn-sm btn-primary pull-right" ng-click="addUser()"><i class="glyphicon glyphicon-plus"></i> {{\'Add User Account\'|t}}</button>\n    <h2 class="firstheader">{{\'User Accounts\'|t}}</h2>\n    <table class="table table-hover table-striped">\n        <thead>\n            <th>{{\'Username\'|t}}</th>\n            <th>{{\'Privileges\'|t}}</th>\n            <th class="hidden-xs">{{\'Last Login\'|t}}</th>\n            <th></th>\n        </thead>\n        <tbody ng-repeat="user in users | orderBy:\'username\' | filter:search">\n            <tr>\n                <td ng-click="user.details = !!!user.details" style="cursor: pointer;"><i class="glyphicon" style="margin-right: 10px" ng-class="{\'glyphicon-chevron-down\': user.details, \'glyphicon-chevron-right\': !user.details}"></i>{{user.username}}</td>\n                <td class="privileges">\n                    <i ng-repeat="priv in PRIVS" ng-if="priv.enabled" class="glyphicon {{priv.icon}}" ng-class="{\'priv-enabled\': hasPriv(user, priv.value)}" ng-click="togglePriv(user, priv.value)" title="{{priv.title|t}}" bs-tooltip></i>\n                </td>\n                <td class="hidden-xs"><div ng-if="user.lastLogin" am-time-ago="user.lastLogin"></div></td>\n                <td style="text-align: right">\n                    <button title="{{\'Edit\'|t}}" ng-click="editUser(user)" class="btn btn-default btn-xs" bs-tooltip><i class="glyphicon glyphicon-pencil"></i></button>\n                    <button title="{{\'Delete\'|t}}" ng-click="deleteUser(user)" class="btn btn-warning btn-xs" bs-tooltip><i class="glyphicon glyphicon-remove"></i></button>\n                </td>\n            </tr>\n            <tr ng-repeat="instance in instances | orderBy:[\'pinned\',\'name\',\'nick\',\'uuid\']" ng-if="(instance.licenseId || status.modes == 1) && user.details">\n                <td style="padding-left: 20px">{{instance.name || instance.nick}}</td>\n                <td class="privileges">\n                    <i ng-repeat="priv in PRIVS" ng-if="priv.enabled && priv.instance" class="glyphicon {{priv.icon}}" ng-class="{\'priv-enabled\': hasInstancePriv(user, instance, priv.value)}" ng-click="toggleInstancePriv(user, instance, priv.value)" title="{{priv.title|t}}" bs-tooltip></i>\n                </td>\n                <td class="hidden-xs"></td>\n                <td></td>\n            </tr>\n        </tbody>\n    </table>\n    <small>{{\'Changes in here might require a relogin or site refresh when editing yourself.\'|t}}</small>\n</div>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/settings.wizard.discord.tpl.html", '<form ng-submit="setupInstance()">\n\t<div class="modal-body">\n\t\t{{settings}}\n\t\t<div class="alert alert-danger" ng-if="error">{{error}}</div>\n\t\t<div class="form-group">\n\t\t\t<label for="token">{{\'Bot-Token\'|t}}</label>\n\t\t\t<input type="text" class="form-control" id="token" placeholder="" ng-model="instance.token"/>\n\t\t\t<small><a href="https://discordapp.com/developers/applications/me" target="_blank">{{\'Click here to generate a new bot account. Afterwards make sure you click "Create Bot User" to also generate the required token.\'|t}}</a></small>\n\t\t</div>\n\t</div>\n\t<div class="modal-footer">\n\t    <button type="button" class="btn btn-default" ng-click="$hide()">{{\'Cancel\'|t}}</button>\n\t    <button type="submit" class="btn btn-primary">{{\'Save\'|t}}</button>\n\t</div>\n</form>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/tools.localeedit.tpl.html", '<h2>{{\'__name\'|t}}</h2>\n<table class="table table-hover table-striped">\n\t<thead>\n\t\t<th style="width: 50%">Original</th>\n\t\t<th style="width: 50%">Translation</th>\n\t</thead>\n\t<tbody>\n\t\t<tr ng-repeat="(key, baseval) in baseLocale | kvfilter:uiConfig.search" ng-class="{\'untranslated\': !locale[key], \'difftrans\': locale[key] != diffLocale[key] && diffLocale[key]}">\n\t\t\t<td>{{locales[\'en-US\'][key] || key}}<br/><small>{{locales[\'de-DE\'][key]}}</small></td>\n\t\t\t<td><textarea ng-change="store()" rows="3" class="form-control" ng-model="locale[key]"></textarea></td>\n\t\t</tr>\n\t</tbody>\n</table>\n<button class="btn btn-primary" ng-click="export()">Export</button>\n<button class="btn btn-primary" ng-click="exportDiff()">Generate diff</button>\n<button class="btn btn-primary" ng-click="importDiff()">Import diff</button>\n<textarea ng-model="exported" rows="20" style="margin-top: 10px;" class="form-control"></textarea>')
    }])
}(), function (e) {
    try {
        e = angular.module("ts3soundboard-bot-partials")
    } catch (t) {
        e = angular.module("ts3soundboard-bot-partials", [])
    }
    e.run(["$templateCache", function (e) {
        e.put("/partials/tools.tpl.html", '<div class="container-fluid">\n\t<div ui-view></div>\n</div>')
    }])
}();